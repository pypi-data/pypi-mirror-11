Metadata-Version: 1.1
Name: adi.devgen
Version: 0.6
Summary: Misc helper-scripts for creating and expanding Plone-Add-Ons.
Home-page: https://github.com/ida/adi.devgen/
Author: Ida Ebkes
Author-email: contact@ida-ebkes.eu
License: GPL
Description: Introduction
        ============
        
        Yet another command-line Plone-Add-On-Generator, just the way I like it:
        
        No dependencies, no possible conflicts, some Python-methods, that's all.
        
        
        Installation
        =============
        
            $ pip install adi.devgen
        
        
        Alternatively add `adi.devgen` as an egg to your buildout, then
        the `devgen`-executable should be available in its bin-directory
        and callable with `./bin/devgen`.
        
        
        If you want to play around or develop adi.devgen,
        install the latest dev-version with:
        
            $ pip install -e git+https://github.com/ida/adi.devgen.git#egg=adi.devgen
        
        You should find the package for manipulations then in the 'src'-directory
        next to pip's bin-directory, f.e. `cd .myVirtualEnviroment/src`.
        
        
        Usage
        =====
        
        Type the command alone, to get a help-text, what it can do for you:
        
            $ devgen
        
        
        That'll also list the available generator-functions, to get a function's help-text, type:
        
            $ devgen [FUNCTION_NAME]
        
        
        Examples
        ========
        
        Create boilerplate for an addon, that can do nothing, but be installed in a Plonesite:
        
            $ devgen addProfileSkel your.addon
        
        
        Create it not in the directory, where you are, but somewhere else:
        
            $ devgen addProfileSkel some/where/else/your.addon
        
        
        Register another addon as a dependency to your addon:
        
            $ devgen addDep collective.bestaddonever path/to/your.addon
        
        Or, first locate into your addon, then you can omit the appended path (defaults to '.'):
        
            $ cd path/to/your.addon
            $ devgen addDep collective.bestaddonever
        
        
        Create an installable Plone-Addon, with a stylesheet, a javascript and a template in a skin folder:
        
            $ devgen addSkinSkel your.addon
        
        
        Create an installable Plone-Addon, with a stylesheet and a javascript in a browser's resource-folder.
        
            $ devgen addBrowserSkel your.addon
        
        
        Add docs-folder and read defaults for setup.py of a config:
        
            $ devgen addMetaSkel
        
        If a file '~/.buildout/devgen.cfg' is present, values will be read of it and
        inserted to setup.py. Its format is expected to be like:
        
            author=Arbi Trary
            author_email=arbi@tra.ry
            url=https://github.com/arbitrary/your.addon
        
        
        TODO
        ====
        
        - Regard more than one dotted namespace for addon.
        
        - Split functions into smaller reusable chunks.
        
        - Possibly transfer:
        https://github.com/ida/skriptz/blob/master/plone/Dexterity/addField.py
        
        
        Changelog
        =========
        
        0.6 (150923)
        ------------
        
        - Fix imports, expand devgen() to detect and add default-vals to passed args.
        
        
        0.5 (150921)
        ------------
        
        - Fix imports, better hlp-msgs, improve installPlone().
        
        
        0.4 (150920)
        ------------
        
        - Update README
        
        
        0.3 (150920)
        ------------
        
        - Fix changed import-paths.
        
        
        0.2 (150920)
        ------------
        
        - Add adi.commons as dependency.
        
        
        0.1 (150920)
        ------------
        
        - Initial release
        
        
Platform: UNKNOWN
Classifier: Framework :: Plone
Classifier: Programming Language :: Python
