[tox]
envlist = py27,py33,py34
skip_missing_interpreters = true

[testenv]
passenv = *
basepython =
    py27: python2.7
    py33: python3.3
    py34: python3.4
    py2: python2.7
    py3: python3.4

setenv =
    # This is needed for testing, spex should be pointed at this and handle this noise itself
    PYTHONPATH = {toxinidir}/spark/spark/python:{toxinidir}/spark/spark/python/lib/py4j-0.8.2.1-src.zip

deps =
    -rrequirements.txt
    -rtest_requirements.txt
    bumpversion
    coverage
    twine
    prospector[with_everything]

commands =
    prospector -P {toxinidir}/.prospector.yml spex
    py.test --junitxml=junit-jenkins-2.7.xml -s tests/
    coverage run --branch --source {toxinidir}/spex -m py.test tests/
    coverage combine
    coverage report --fail-under 80 --include=* -m

[testenv:jenkins-2.7]
basepython = /usr/bin/python2.7
recreate = True
commands =
    prospector -P {toxinidir}/.prospector.yml spex
    py.test --junitxml=junit-jenkins-2.7.xml -s tests/
    coverage run --branch --source {toxinidir}/spex -m py.test tests/
    coverage combine
    coverage report --fail-under 80 --include=* -m

[testenv:dev]
basepython = python2.7
skipsdist = true
envdir = env

[testenv:package]
basepython = /usr/bin/python2.7
commands = pex -vvv . -c spex -o dist/spex.pex

[testenv:licenses]
basepython = python2.7
skipsdist = true
envdir = env
commands = li
    -rrequirements.txt
deps = license-info

[testenv:docs]
changedir = docs/
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test_requirements.txt
    sphinx
    numpydoc
commands =
    sphinx-build -b linkcheck ./ _build/
    sphinx-build -b html ./ _build/
    #sphinx-apidoc -f -o docs/source projectdir

[testenv:release]
basepython = python2.7
commands =
    twine upload dist/*


[pytest]
norecursedirs =
    .git
    .tox
    dist
    build
    env
