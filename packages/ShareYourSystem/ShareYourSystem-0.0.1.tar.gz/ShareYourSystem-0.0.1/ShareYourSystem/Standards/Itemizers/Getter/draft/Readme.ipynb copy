{
 "metadata": {
  "name": "",
  "signature": "sha256:87c6a171563b9475b26dc4ed509bbf31e3fee3a63ae0d4eb367d88cd6d0be529"
 },
 "nbformat": 3,
 "nbformat_minor": 0,
 "worksheets": [
  {
   "cells": [
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "import os,importlib\n",
      "PathStr=os.getcwd()\n",
      "ModuleStr=os.getcwd().split('ShareYourSystem')[-1].replace('/','.')\n",
      "NameStr=ModuleStr.split('.')[-1]\n",
      "Module=importlib.import_module('ShareYourSystem'+ModuleStr);\n",
      "MarkdownStr=\"#\"+NameStr\n",
      "\n",
      "print(Module.__doc__)\n",
      "\n"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "output_type": "stream",
       "stream": "stdout",
       "text": [
        "\n",
        "Author: Erwan Ledoux\n",
        "Date : 01/12/1014\n",
        "\n",
        "A Getter helps for getting attributes safely in \n",
        "an instance by looking first in the __dict__ to \n",
        "check if there is the corresponding GettingKeyStr\n",
        "\n"
       ]
      }
     ],
     "prompt_number": 1
    },
    {
     "cell_type": "markdown",
     "metadata": {},
     "source": [
      "#Getter\n"
     ]
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [
      "#```python\n",
      "from pylab import *\n",
      "plot([4,5],[5,6],'o')\n",
      "class Apple():\n",
      "    def eat(self):\n",
      "        pass\n",
      "#```"
     ],
     "language": "python",
     "metadata": {},
     "outputs": [
      {
       "metadata": {},
       "output_type": "display_data",
       "png": "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\n",
       "text": [
        "<matplotlib.figure.Figure at 0x106fe59b0>"
       ]
      }
     ],
     "prompt_number": 2
    },
    {
     "cell_type": "code",
     "collapsed": false,
     "input": [],
     "language": "python",
     "metadata": {},
     "outputs": []
    }
   ],
   "metadata": {}
  }
 ]
}