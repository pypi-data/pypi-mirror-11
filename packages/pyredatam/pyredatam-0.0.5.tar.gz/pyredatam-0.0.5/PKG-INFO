Metadata-Version: 1.1
Name: pyredatam
Version: 0.0.5
Summary: Genera consultas REDATAM en python.
Home-page: https://github.com/abenassi/pyredatam
Author: Agust√≠n Benassi
Author-email: agusbenassi@gmail.com
License: GPLv3+
Description: ['pyredatam', '=========', '', '|Coverage Status| |Build Status| |PyPI| |Buy me a coffee|', '', 'Genera consultas REDATAM en python.', '', 'Instalaci\xc3\xb3n', '-----------', '', '.. code:: python', '', 'virtualenv pyredatam  # Create new environment', 'source pyredatam/bin/activate  # Activate the environment', 'pip install -r requirements.txt  # Install dependencies', '', 'Uso', '---', '', '.. code:: python', '', 'import pyredatam', '', '# para generar una consulta de lista por \xc3\xa1reas', 'query = pyredatam.arealist_query("FRAC", "PERSONA.CONDACT",', '{"PROV": ["02", "03"]})', 'print query', '"""', 'RUNDEF Job', 'SELECTION INLINE,', 'PROV 02, 03', '<BLANKLINE>', 'TABLE TABLE1', 'AS AREALIST', 'OF FRAC, PERSONA.CONDACT', '"""', '', '# para hacer la consulta a la base REDATAM del Censo 2010 de Argentina', 'df = pyredatam.cpv2010arg.make_arealist_query(query)', '# devuelve un pandas.DataFrame con el resultado', '', '# para hacer otras consultas REDATAM que no sean de tipo lista por \xc3\xa1reas', 'html = pyredatam.cpv2010arg.make_query(query)', '# devuelve un html con el resultado, que debe ser parseado', '', '# para construir el diccionario de entidades, variables y categor\xc3\xadas', 'dicc, entidades_geo, entidades_data = pyredatam.cpv2010arg.scrape_dictionary()', '', 'Generar consultas REDATAM', '-------------------------', '', 'Esta es una lista de los tipos de consultas que el sistema REDATAM', 'permite, la idea es ir implementando todas ellas en este paquete. Si', 'necesit\xc3\xa1s usar alguna que a\xc3\xban no ha sido implementada, bienvenidas todas', 'las contribuciones!', '', '-  Estad\xc3\xadsticas (**Falta implementar**)', '-  Frecuencias (**Falta implementar**)', '-  Cruce de Variables (**Falta implementar**)', '-  Promedio (**Falta implementar**)', '-  Mediana (**Falta implementar**)', '-  Conteo (**Falta implementar**)', '-  Lista por \xc3\x81reas (**SOPORTADO!**)', '', '-  *Una o m\xc3\xa1s variables* (variables cuyos datos se quiere obtener)', '-  *Nivel de Salida* (nivel de agregaci\xc3\xb3n geogr\xc3\xa1fico al cual se piden', 'los datos)', '-  *Incluir Nombres del \xc3\x81rea de Salida* (incluir nombres adem\xc3\xa1s de', 'los c\xc3\xb3digos de las \xc3\xa1reas de salida - **Falta implementar**)', '-  *T\xc3\xadtulo* (t\xc3\xadtulo que tendr\xc3\xa1 la tabla con los resultados', 'solicitados)', '-  *Selecci\xc3\xb3n de \xc3\x81rea* (restringir los resultados a un \xc3\xa1rea', 'geogr\xc3\xa1fica en particular)', '-  *Filtro Universal* (expresi\xc3\xb3n de filtro en lenguaje REDATAM)', '-  *Peso* (uso de ponderadores - **Falta implementar**)', '', 'Scrapear resultados de consultas REDATAM', '----------------------------------------', '', 'El paquete incluir\xc3\xa1 un m\xc3\xb3dulo por base de datos REDATAM que permita', 'hacer las consultas generadas a la base correspondiente al que se acceda', 'como ``pyredatam.modulo_redatam_db``. Por ahora s\xc3\xb3lo se provee un m\xc3\xb3dulo', 'con m\xc3\xa9todos para consultar y parsear el resultado de la base de datos', 'REDATAM del Censo 2010 de Argentina. Todos los m\xc3\xb3dulos que se agreguen', 'deber\xc3\xadan proveer, al menos, los siguientes m\xc3\xa9todos p\xc3\xbablicos:', '', '-  ``make_query(query)`` - Devuelve un html (u otra cosa, si no es', 'posible) con el resultado de la query realizada a la base de datos.', '-  ``make_arealist_query(query)`` - M\xc3\xa9todos espec\xc3\xadficos para cada tipo', 'de consulta, que usen make\\_query() y luego parseen el resultado html', '(o del formato que sea) a un DataFrame de pandas.', '-  ``scrape_dictionary()`` - Un m\xc3\xa9todo que devuelva un diccionario', 'jer\xc3\xa1rquico ordenado (collections.OrderedDict) de entidades, sus', 'variables y las categor\xc3\xadas de las variables; una lista de las', 'entidades que se utilizan para agregar geogr\xc3\xa1ficamente la', 'informaci\xc3\xb3n, y una lista de las entidades que contienen variables con', 'data (no usadas para agregar la base de datos geogr\xc3\xa1ficamente, sino', 'con la data que es realmente el objetivo de la encuesta o censo).', '', '.. |Coverage Status| image:: https://coveralls.io/repos/abenassi/pyredatam/badge.svg?branch=master', ':target: https://coveralls.io/r/abenassi/pyredatam?branch=master', '.. |Build Status| image:: https://travis-ci.org/abenassi/pyredatam.svg?branch=master', ':target: https://travis-ci.org/abenassi/pyredatam', '.. |PyPI| image:: https://badge.fury.io/py/pyredatam.svg', ':target: http://badge.fury.io/py/pyredatam', '.. |Buy me a coffee| image:: https://img.shields.io/badge/donate-buy%20me%20a%20coffee-blue.svg', ':target: http://ko-fi.com?i=934NLRIV80O8']
Keywords: pyredatam
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
