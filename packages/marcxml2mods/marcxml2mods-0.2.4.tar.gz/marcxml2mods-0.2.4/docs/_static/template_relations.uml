package xslt {
    class mods_nonp_single as "MARC21slim2MODS3-4-NDK.xsl" <<X, Green>> {
        Converts Aleph's non-periodical
        non-multi-monograph metadata to
        MODS.
    }
    class mods_nonp_multi as "MARC21toMultiMonographTitle.xsl" <<X, Green>> {
        Converts Aleph's non-periodical
        multi-monograph metadata to MODS.
    }
    class mods_per as "MARC21toPeriodicalTitle.xsl" <<X, Green>> {
        Converts Aleph's periodical
        metadata to MODS.
    }
}

package mods_postprocessor {
    class mp_init as "_​_init__.py" <<M, Red>> {
        Used to fix data after XSLT templates.

        $templater:module:mods_postprocessor/__init__
    }
    class shared_funcs as "shared_funcs.py" <<M, Red>> {
        Functions shared in mods_postprocessor/ module.

        $templater:module:mods_postprocessor/shared_funcs
    }
    class monograph as "monograph.py" <<M, Red>> {
        Functions used to postprocess Monograph
        MODS XML.

        $templater:module:mods_postprocessor/monograph
    }
    class multi_mono as "multi_monograph.py" <<M, Red>> {
        Functions used to postprocess Multimono
        MODS XML.

        $templater:module:mods_postprocessor/multi_monograph
    }
    class periodical as "periodical.py" <<M, Red>> {
        Functions used to postprocess Periodical
        MODS XML.

        $templater:module:mods_postprocessor/periodical
    }
}

class xslt_transformer as "xslt_transformer.py" <<M, Red>> {
    Used to convert data using XSLT
    templates.

    $templater:module:xslt_transformer
}

class transformators as "transformators.py" <<M, Red>> {
    Used to transform Aleph's metadata to MODS.

    $templater:module:transformators
}

class init as "_​_init__.py" <<M, Red>> {
    Package's _​_init__ file.

    marcxml2mods()
}


shared_funcs -d-> monograph: uses
shared_funcs -d-> multi_mono: uses
shared_funcs -d-> periodical: uses
monograph -d-> mp_init: is imported
multi_mono -d-> mp_init: is imported
periodical -d-> mp_init: is imported

mods_nonp_single -d-> transformators: reads
mods_nonp_multi .d.> transformators: reads
mods_per .d.> transformators: read

mp_init -r-> transformators: fixes
transformators --> mp_init

transformators <-r-> xslt_transformer: uses

transformators -d-> init: is imported