#! /usr/bin/env python
# -*- coding: utf-8 -*-
#
# Interpreter version: python 2.7
#
# Imports =====================================================================
from monograph import add_uuid
from monograph import add_xml_declaration
from monograph import add_missing_xml_attributes

from shared_funcs import double_linked_dom


# Functions & classes =========================================================
@add_xml_declaration
def postprocess_multi_mono(marc_xml, mods, uuid, counter, url):
    """
    Some basic postprocessing of the multi-monograph publications.

    Args:
        marc_xml (str): Original Aleph record.
        mods (str): XML string generated by XSLT template.
        uuid (str): UUID of the package.
        counter (int): Number of record, is added to XML headers.
        url (str): URL of the publication (public or not).

    Returns:
        str: Updated XML.
    """
    dom = double_linked_dom(mods)

    # TODO: Add more postprocessing

    add_missing_xml_attributes(dom, counter)

    if uuid:
        add_uuid(dom, uuid)

    return dom.prettify()
