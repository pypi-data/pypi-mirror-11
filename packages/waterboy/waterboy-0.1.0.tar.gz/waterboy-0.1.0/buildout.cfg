
[buildout]
parts =
    environment
    mkdirs
    python
    redis
    mongodb
bin-directory = ${buildout:directory}/bin
parts-directory = ${buildout:directory}/.buildout
develop-eggs-directory = ${buildout:parts-directory}/develop-eggs
installed = ${buildout:parts-directory}/installed.cfg
develop =
    .
develop-dir=${buildout:directory}/src

[environment]
recipe = collective.recipe.environment

[cfg]
redis-version = 3.0.3
redis-port = ${environment:REDIS_PORT}
mongodb-port = ${environment:MONGO_PORT}
tools-home = ${buildout:directory}/tools
srv-root = ${buildout:directory}/srv
data-root = ${buildout:directory}/data
var-root = ${buildout:directory}/var
log-root = ${buildout:directory}/logs

[mkdirs]
recipe = z3c.recipe.mkdir
paths =
    ${cfg:data-root}
    ${cfg:log-root}
    ${cfg:srv-root}
    ${cfg:var-root}

[python]
recipe = zc.recipe.egg
interpreter = python
eggs = waterboy

[redis]
recipe = hexagonit.recipe.cmmi
url = http://download.redis.io/releases/redis-${cfg:redis-version}.tar.gz
configure-command = true
make-options =
    PREFIX=${buildout:directory}
make-targets =
    install

[mongodb]
# download and install mongodb using the mongodb-install script from the tools directory
# Then launch a temporary daemonized mongod and initiate it.
# NOTE: 'kill -3 <PID>' to stop mongo on OSX, 'kill <PID>' has no effect (although it
#       seemed to work in mongodb v2.*)
# NOTE: the 'sleeps' are important; without them you can leave the database in
#       an inconsistent state. (The number of seconds is not scientific).
recipe = collective.recipe.cmd
on_install = true
on_update = false
cmds =
    ${cfg:tools-home}/mongodb-install ${cfg:srv-root} ${buildout:bin-directory}
    if [ -e ${cfg:var-root}/mongod.pid ]; then \
        kill -0 $(cat ${cfg:var-root}/mongod.pid) &> /dev/null && kill -3 $(cat ${cfg:var-root}/mongod.pid); fi
    rm -f ${cfg:var-root}/mongod.pid
    ${buildout:bin-directory}/mongod --fork \
        --port ${cfg:mongodb-port} \
        --dbpath ${cfg:data-root} \
        --replSet rs0 \
        --logpath ${cfg:log-root}/mongod.log \
        --pidfilepath ${cfg:var-root}/mongod.pid
    echo "STARTED MONGODB"
    sleep 6
    ${buildout:bin-directory}/mongo \
        --port ${cfg:mongodb-port} \
        --eval "rs.initiate({ _id:'rs0', members:[{_id:0, host: 'localhost:${cfg:mongodb-port}'}]})"
    sleep 6
    if [ -e ${cfg:var-root}/mongod.pid ]; then \
        kill -0 $(cat ${cfg:var-root}/mongod.pid) &> /dev/null && kill -3 $(cat ${cfg:var-root}/mongod.pid); fi
    echo "STOPPED MONGODB"

