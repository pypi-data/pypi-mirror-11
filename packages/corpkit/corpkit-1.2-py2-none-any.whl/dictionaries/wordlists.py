# lists of closed class words

# feel free to correct/add things, this was just a quick grab from the web

def closed_class_wordlists():
    """add words here if need be"""
    import collections

    pronouns = [u"all",
            u"another",
            u"any",
            u"anybody",
            u"anyone",
            u"anything",
            u"both",
            u"each",
            u"each",
            u"other",
            u"either",
            u"everybody",
            u"everyone",
            u"everything",
            u"few",
            u"he",
            u"her",
            u"hers",
            u"herself",
            u"him",
            u"himself",
            u"his",
            u"it",
            u"i",
            u"its",
            u"itself",
            u"many",
            u"me",
            u"mine",
            u"more",
            u"most",
            u"much",
            u"myself",
            u"neither",
            u"no",
            u"one",
            u"nobody",
            u"none",
            u"nothing",
            u"one",
            u"another",
            u"other",
            u"others",
            u"ours",
            u"ourselves",
            u"several",
            u"she",
            u"some",
            u"somebody",
            u"someone",
            u"something",
            u"that",
            u"their",
            u"theirs",
            u"them",
            u"themselves",
            u"these",
            u"they",
            u"this",
            u"those",
            u"us",
            u"we",
            u"what",
            u"whatever",
            u"which",
            u"whichever",
            u"who",
            u"whoever",
            u"whom",
            u"whomever",
            u"whose",
            u"you",
            u"your",
            u"yours",
            u"yourself",
            u"yourselves"]

    articles = [u"a",
            u"an",
            u"the",
            u"teh"]

    determiners = [u"all",
                u"anotha",
                u"another",
                u"any",
                u"any-and-all",
                u"atta",
                u"both",
                u"certain",
                u"couple",
                u"dat",
                u"dem",
                u"dis",
                u"each",
                u"either",
                u"enough",
                u"enuf",
                u"enuff",
                u"every",
                u"few",
                u"fewer",
                u"fewest",
                u"her",
                u"hes",
                u"his",
                u"its",
                u"last",
                u"least",
                u"little",
                u"many",
                u"more",
                u"most",
                u"much",
                u"muchee",
                u"my",
                u"neither",
                u"next",
                u"nil",
                u"no",
                u"none",
                u"other",
                u"our",
                u"overmuch",
                u"owne",
                u"plenty",
                u"quodque",
                u"said",
                u"several",
                u"some",
                u"such",
                u"sufficient",
                u"that",
                u"their",
                u"them",
                u"these",
                u"they",
                u"thilk",
                u"thine",
                u"this",
                u"those",
                u"thy",
                u"umpteen",
                u"us",
                u"various",
                u"wat",
                u"we",
                u"what",
                u"whatever",
                u"which",
                u"whichever",
                u"yonder",
                u"you",
                u"your"]

    prepositions = [u"about",
                u"above",
                u"across",
                u"after",
                u"against",
                u"along",
                u"among",
                u"around",
                u"at",
                u"before",
                u"behind",
                u"below",
                u"beneath",
                u"beside",
                u"between",
                u"by",
                u"down",
                u"during",
                u"except",
                u"for",
                u"from",
                u"front",
                u"in",
                u"inside",
                u"instead",
                u"into",
                u"like",
                u"near",
                u"of",
                u"off",
                u"on",
                u"onto",
                u"out",
                u"outside",
                u"over",
                u"past",
                u"since",
                u"through",
                u"to",
                u"top",
                u"toward",
                u"under",
                u"underneath",
                u"until",
                u"up",
                u"upon",
                u"with",
                u"within",
                u"without"]

    connectors = [u"about",
        u"above",
        u"across",
        u"after",
        u"against",
        u"along",
        u"among",
        u"around",
        u"at",
        u"before",
        u"behind",
        u"below",
        u"beneath",
        u"beside",
        u"between",
        u"by",
        u"down",
        u"during",
        u"except",
        u"for",
        u"from",
        u"front",
        u"in",
        u"inside",
        u"instead",
        u"into",
        u"like",
        u"near",
        u"of",
        u"off",
        u"on",
        u"onto",
        u"out",
        u"outside",
        u"over",
        u"past",
        u"since",
        u"through",
        u"to",
        u"top",
        u"toward",
        u"under",
        u"underneath",
        u"until",
        u"up",
        u"upon",
        u"with",
        u"within",
        u"without"]

    modals = [u"would", 
        u"will", 
        u"can", 
        u"could", 
        u"may", 
        u"should", 
        u"might", 
        u"must", 
        u"ca", 
        u"'ll", 
        u"'d", 
        u"wo", 
        u"ought", 
        u"need", 
        u"shall", 
        u"dare", 
        u"shalt"]

    titlewords = ['admiral', 'archbishop', 'alan', 'merrill', 'sarah', 
              'queen', 'king', 'sen', 'chancellor', 'prime minister', 
              'cardinal', 'bishop', 'father', 'hon', 'rev', 'reverend', 
              'pope', 'sir', 'doctor', 'professor', 'president', 
              'senator', 'congressman', 'congresswoman', 'mr', 'ms', 
              'mrs', 'miss', 'dr', 'bill', 'hillary', 'hillary rodham', 
              'saddam', 'osama', 'ayatollah', 'george', 'george w', 
              'mitt', 'malcolm', 'barack', 'ronald', 'john', 'john f', 
              'william', 'al', 'bob']

    #all_lists = [pronouns, articles, determiners, prepositions, connectors, modals]
    closedclass = sorted(list(set(pronouns + articles + determiners + prepositions + connectors + modals)))
    outputnames = collections.namedtuple('wordlists', ['pronouns', 'articles', 'determiners', 'prepositions', 'connectors', 'modals', 'closedclass', 'titles'])
    output = outputnames(pronouns, articles, determiners, prepositions, connectors, modals, closedclass, titlewords)
    return output

wordlists = closed_class_wordlists()