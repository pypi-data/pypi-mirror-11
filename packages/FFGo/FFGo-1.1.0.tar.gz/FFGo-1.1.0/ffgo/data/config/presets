# You can define a list of options that will be used in case the config file
# (~/.ffgo/config on Unix, %APPDATA%/FFGo/config on Windows) can't be found.
# That is in most situations at program's first start. Write every option on a
# separate line.
#
#
# Options shared with FlightGear:
# --aircraft=name               - Defaults to c172p if not set.
# --airport=ID                  - Defaults to KSFO if not set.
# --carrier=[name|ID]           - Works the same as in FG.
# --fg-root=path                - Works the same as in FG.
# --fg-scenery=path             - Works the same as in FG.
# --parkpos=name                - Works the same as in FG.
# --runway=rwy_no               - Works the same as in FG.
#
# Other FlightGear options can be added, but unlike the ones mentioned above,
# will not be filtered out and will be visible in the FFGo text window.
#
#
# FFGo specific options:
# AI_SCENARIOS=scenario_name    - List of scenario names (without xml
#                                 extension) separated by spaces.
# APT_DATA_SOURCE=boolean       - 0 or 1 (defaults to 0). Select data source
#                                 where FFGo will be looking for information
#                                 about runways or parking positions. 0 means
#                                 default, and 1 means scenery. Remember that
#                                 you may need to also add
#                                 --prop:/sim/paths/use-custom-scenery-data=true
#                                 argument to tell FlightGear to use
#                                 the same data if scenery source is selected.
# AUTO_UPDATE_APT=boolean       - 0 or 1 (defaults to 0). Keep track of
#                                 changes of FG_ROOT/Airports/apt.dat.gz file,
#                                 and rebuild its own airport database
#                                 automatically when it is needed.
# BASE_FONT_SIZE=size           - Font size in points. Should be in the range
#                                 from MIN_BASE_FONT_SIZE to MAX_BASE_FONT_SIZE
#                                 defined in ffgo/constants.py; or 0, which is
#                                 platform-dependent default size.
# FG_AIRCRAFT=path              - Path to additional aircraft directory.
#                                 Multiple paths, separated by a colon can be
#                                 provided.
# FG_BIN=path                   - Path to fgfs executable.
# FG_WORKING_DIR=path           - Use this option if you want to set different
#                                 than user's home folder as working directory
#                                 for FlightGear.
# FILTER_APT_LIST=boolean       - 0 or 1 (defaults to 0). Show only installed
#                                 airports in the airport list.
# LANG=lang_code                - Use short language code, e.g.: en, de, fr, es
#                                 FFGo will try to use system system language
#                                 if not set.
# WINDOW_GEOMETRY=widthxheight or widthxheight+x+y
#                               - Geometry of the main window. Use only if you
#                                 are not satisfied with default window size.
# SAVE_WINDOW_POSITION=boolean  - 0 or 1 (defaults to 1). If 0, then only the
#                                 size of the main window is saved in
#                                 WINDOW_GEOMETRY; otherwise, both its size
#                                 and the offsets from the screen borders are
#                                 saved.
# SHOW_FG_COMMAND=boolean       - 0 or 1 (defaults to 1). Show the arguments
#                                 that will be passed to fgfs, the FlightGear
#                                 executable.
# SHOW_FG_COMMAND_IN_SEPARATE_WINDOW=boolean
#                               - 0 or 1 (defaults to 0). If the arguments
#                                 that will be passed to fgfs are to be
#                                 displayed, do it in a separate window instead
#                                 of the main FFGo window.
# FG_COMMAND_GEOMETRY=widthxheight+x+y
#                               - Window geometry specification for the
#                                 Commmand Window. Set this only if you are not
#                                 satisfied with the default window geometry.
# SHOW_FG_OUTPUT=boolean        - 0 or 1 (defaults to 1). Show the output
#                                 (sdtout and stderr) of fgfs, the FlightGear
#                                 executable.
# SHOW_FG_OUTPUT_IN_SEPARATE_WINDOW=boolean
#                               - 0 or 1 (defaults to 0). If the fgfs output is
#                                 to be displayed, do it in a separate window
#                                 instead of the main FFGo window.
# FG_OUTPUT_GEOMETRY=widthxheight+x+y
#                               - Window geometry specification for the
#                                 Output Window. Set this only if you are not
#                                 satisfied with the default window geometry.
#
# Any number of options can be selected, but to get FFGo ready to work,
# you only need:
# --fg-root=
# --fg-scenery=
# FG_BIN=
