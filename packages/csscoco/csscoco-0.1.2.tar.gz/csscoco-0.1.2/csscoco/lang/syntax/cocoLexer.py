# Generated from java-escape by ANTLR 4.5
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2)")
        buf.write("\u013e\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\3\2")
        buf.write("\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3")
        buf.write("\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16")
        buf.write("\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\21\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25")
        buf.write("\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\30\3\31\3\31\3\31")
        buf.write("\3\32\3\32\3\32\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34")
        buf.write("\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3")
        buf.write("!\3!\3\"\3\"\3\"\3#\3#\3$\3$\5$\u00e8\n$\3%\3%\3&\3&\3")
        buf.write("\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'")
        buf.write("\3\'\3\'\3\'\3\'\5\'\u0100\n\'\3(\3(\3(\3(\7(\u0106\n")
        buf.write("(\f(\16(\u0109\13(\3)\3)\3)\7)\u010e\n)\f)\16)\u0111\13")
        buf.write(")\5)\u0113\n)\3*\3*\3*\7*\u0118\n*\f*\16*\u011b\13*\3")
        buf.write("*\3*\3+\3+\3+\3+\7+\u0123\n+\f+\16+\u0126\13+\3+\3+\3")
        buf.write("+\3+\3+\3,\3,\3,\3,\7,\u0131\n,\f,\16,\u0134\13,\3,\3")
        buf.write(",\3-\6-\u0139\n-\r-\16-\u013a\3-\3-\4\u0119\u0124\2.\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C\2E\2G\2I\2K\2M#")
        buf.write("O$Q%S&U\'W(Y)\3\2\t\3\2))\4\2C\\c|\3\2\63;\3\2\62\62\4")
        buf.write("\2//aa\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u0146\2\3\3\2")
        buf.write("\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2")
        buf.write("\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2")
        buf.write("\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35")
        buf.write("\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2")
        buf.write("\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2")
        buf.write("\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2")
        buf.write("\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2")
        buf.write("\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2")
        buf.write("\2\2\2W\3\2\2\2\2Y\3\2\2\2\3[\3\2\2\2\5]\3\2\2\2\7_\3")
        buf.write("\2\2\2\tf\3\2\2\2\13n\3\2\2\2\rv\3\2\2\2\17{\3\2\2\2\21")
        buf.write("~\3\2\2\2\23\u0086\3\2\2\2\25\u0088\3\2\2\2\27\u008a\3")
        buf.write("\2\2\2\31\u008c\3\2\2\2\33\u008e\3\2\2\2\35\u0092\3\2")
        buf.write("\2\2\37\u0096\3\2\2\2!\u0099\3\2\2\2#\u009c\3\2\2\2%\u00a3")
        buf.write("\3\2\2\2\'\u00a9\3\2\2\2)\u00b1\3\2\2\2+\u00b3\3\2\2\2")
        buf.write("-\u00b5\3\2\2\2/\u00b7\3\2\2\2\61\u00ba\3\2\2\2\63\u00bd")
        buf.write("\3\2\2\2\65\u00c0\3\2\2\2\67\u00c3\3\2\2\29\u00ca\3\2")
        buf.write("\2\2;\u00d0\3\2\2\2=\u00da\3\2\2\2?\u00dc\3\2\2\2A\u00de")
        buf.write("\3\2\2\2C\u00e0\3\2\2\2E\u00e3\3\2\2\2G\u00e7\3\2\2\2")
        buf.write("I\u00e9\3\2\2\2K\u00eb\3\2\2\2M\u00ff\3\2\2\2O\u0101\3")
        buf.write("\2\2\2Q\u0112\3\2\2\2S\u0114\3\2\2\2U\u011e\3\2\2\2W\u012c")
        buf.write("\3\2\2\2Y\u0138\3\2\2\2[\\\7}\2\2\\\4\3\2\2\2]^\7\177")
        buf.write("\2\2^\6\3\2\2\2_`\7h\2\2`a\7q\2\2ab\7t\2\2bc\7d\2\2cd")
        buf.write("\7k\2\2de\7f\2\2e\b\3\2\2\2fg\7o\2\2gh\7g\2\2hi\7u\2\2")
        buf.write("ij\7u\2\2jk\7c\2\2kl\7i\2\2lm\7g\2\2m\n\3\2\2\2no\7t\2")
        buf.write("\2op\7g\2\2pq\7s\2\2qr\7w\2\2rs\7k\2\2st\7t\2\2tu\7g\2")
        buf.write("\2u\f\3\2\2\2vw\7h\2\2wx\7k\2\2xy\7p\2\2yz\7f\2\2z\16")
        buf.write("\3\2\2\2{|\7k\2\2|}\7p\2\2}\20\3\2\2\2~\177\7p\2\2\177")
        buf.write("\u0080\7g\2\2\u0080\u0081\7z\2\2\u0081\u0082\7v\2\2\u0082")
        buf.write("\u0083\7/\2\2\u0083\u0084\7v\2\2\u0084\u0085\7q\2\2\u0085")
        buf.write("\22\3\2\2\2\u0086\u0087\7*\2\2\u0087\24\3\2\2\2\u0088")
        buf.write("\u0089\7.\2\2\u0089\26\3\2\2\2\u008a\u008b\7+\2\2\u008b")
        buf.write("\30\3\2\2\2\u008c\u008d\7?\2\2\u008d\32\3\2\2\2\u008e")
        buf.write("\u008f\7p\2\2\u008f\u0090\7q\2\2\u0090\u0091\7v\2\2\u0091")
        buf.write("\34\3\2\2\2\u0092\u0093\7c\2\2\u0093\u0094\7p\2\2\u0094")
        buf.write("\u0095\7f\2\2\u0095\36\3\2\2\2\u0096\u0097\7q\2\2\u0097")
        buf.write("\u0098\7t\2\2\u0098 \3\2\2\2\u0099\u009a\7k\2\2\u009a")
        buf.write("\u009b\7u\2\2\u009b\"\3\2\2\2\u009c\u009d\7d\2\2\u009d")
        buf.write("\u009e\7g\2\2\u009e\u009f\7h\2\2\u009f\u00a0\7q\2\2\u00a0")
        buf.write("\u00a1\7t\2\2\u00a1\u00a2\7g\2\2\u00a2$\3\2\2\2\u00a3")
        buf.write("\u00a4\7c\2\2\u00a4\u00a5\7h\2\2\u00a5\u00a6\7v\2\2\u00a6")
        buf.write("\u00a7\7g\2\2\u00a7\u00a8\7t\2\2\u00a8&\3\2\2\2\u00a9")
        buf.write("\u00aa\7d\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac\7v\2\2\u00ac")
        buf.write("\u00ad\7y\2\2\u00ad\u00ae\7g\2\2\u00ae\u00af\7g\2\2\u00af")
        buf.write("\u00b0\7p\2\2\u00b0(\3\2\2\2\u00b1\u00b2\7/\2\2\u00b2")
        buf.write("*\3\2\2\2\u00b3\u00b4\7>\2\2\u00b4,\3\2\2\2\u00b5\u00b6")
        buf.write("\7@\2\2\u00b6.\3\2\2\2\u00b7\u00b8\7>\2\2\u00b8\u00b9")
        buf.write("\7?\2\2\u00b9\60\3\2\2\2\u00ba\u00bb\7@\2\2\u00bb\u00bc")
        buf.write("\7?\2\2\u00bc\62\3\2\2\2\u00bd\u00be\7?\2\2\u00be\u00bf")
        buf.write("\7?\2\2\u00bf\64\3\2\2\2\u00c0\u00c1\7#\2\2\u00c1\u00c2")
        buf.write("\7?\2\2\u00c2\66\3\2\2\2\u00c3\u00c4\7p\2\2\u00c4\u00c5")
        buf.write("\7q\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7\"\2\2\u00c7\u00c8")
        buf.write("\7k\2\2\u00c8\u00c9\7p\2\2\u00c98\3\2\2\2\u00ca\u00cb")
        buf.write("\7o\2\2\u00cb\u00cc\7c\2\2\u00cc\u00cd\7v\2\2\u00cd\u00ce")
        buf.write("\7e\2\2\u00ce\u00cf\7j\2\2\u00cf:\3\2\2\2\u00d0\u00d1")
        buf.write("\7p\2\2\u00d1\u00d2\7q\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4")
        buf.write("\7\"\2\2\u00d4\u00d5\7o\2\2\u00d5\u00d6\7c\2\2\u00d6\u00d7")
        buf.write("\7v\2\2\u00d7\u00d8\7e\2\2\u00d8\u00d9\7j\2\2\u00d9<\3")
        buf.write("\2\2\2\u00da\u00db\7\60\2\2\u00db>\3\2\2\2\u00dc\u00dd")
        buf.write("\7]\2\2\u00dd@\3\2\2\2\u00de\u00df\7_\2\2\u00dfB\3\2\2")
        buf.write("\2\u00e0\u00e1\7^\2\2\u00e1\u00e2\t\2\2\2\u00e2D\3\2\2")
        buf.write("\2\u00e3\u00e4\t\3\2\2\u00e4F\3\2\2\2\u00e5\u00e8\5K&")
        buf.write("\2\u00e6\u00e8\5I%\2\u00e7\u00e5\3\2\2\2\u00e7\u00e6\3")
        buf.write("\2\2\2\u00e8H\3\2\2\2\u00e9\u00ea\t\4\2\2\u00eaJ\3\2\2")
        buf.write("\2\u00eb\u00ec\t\5\2\2\u00ecL\3\2\2\2\u00ed\u00ee\7v\2")
        buf.write("\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7w\2\2\u00f0\u0100\7")
        buf.write("g\2\2\u00f1\u00f2\7V\2\2\u00f2\u00f3\7t\2\2\u00f3\u00f4")
        buf.write("\7w\2\2\u00f4\u0100\7g\2\2\u00f5\u00f6\7h\2\2\u00f6\u00f7")
        buf.write("\7c\2\2\u00f7\u00f8\7n\2\2\u00f8\u00f9\7u\2\2\u00f9\u0100")
        buf.write("\7g\2\2\u00fa\u00fb\7H\2\2\u00fb\u00fc\7c\2\2\u00fc\u00fd")
        buf.write("\7n\2\2\u00fd\u00fe\7u\2\2\u00fe\u0100\7g\2\2\u00ff\u00ed")
        buf.write("\3\2\2\2\u00ff\u00f1\3\2\2\2\u00ff\u00f5\3\2\2\2\u00ff")
        buf.write("\u00fa\3\2\2\2\u0100N\3\2\2\2\u0101\u0107\5E#\2\u0102")
        buf.write("\u0106\5E#\2\u0103\u0106\5G$\2\u0104\u0106\t\6\2\2\u0105")
        buf.write("\u0102\3\2\2\2\u0105\u0103\3\2\2\2\u0105\u0104\3\2\2\2")
        buf.write("\u0106\u0109\3\2\2\2\u0107\u0105\3\2\2\2\u0107\u0108\3")
        buf.write("\2\2\2\u0108P\3\2\2\2\u0109\u0107\3\2\2\2\u010a\u0113")
        buf.write("\5K&\2\u010b\u010f\5I%\2\u010c\u010e\5G$\2\u010d\u010c")
        buf.write("\3\2\2\2\u010e\u0111\3\2\2\2\u010f\u010d\3\2\2\2\u010f")
        buf.write("\u0110\3\2\2\2\u0110\u0113\3\2\2\2\u0111\u010f\3\2\2\2")
        buf.write("\u0112\u010a\3\2\2\2\u0112\u010b\3\2\2\2\u0113R\3\2\2")
        buf.write("\2\u0114\u0119\t\2\2\2\u0115\u0118\5C\"\2\u0116\u0118")
        buf.write("\n\2\2\2\u0117\u0115\3\2\2\2\u0117\u0116\3\2\2\2\u0118")
        buf.write("\u011b\3\2\2\2\u0119\u011a\3\2\2\2\u0119\u0117\3\2\2\2")
        buf.write("\u011a\u011c\3\2\2\2\u011b\u0119\3\2\2\2\u011c\u011d\t")
        buf.write("\2\2\2\u011dT\3\2\2\2\u011e\u011f\7\61\2\2\u011f\u0120")
        buf.write("\7,\2\2\u0120\u0124\3\2\2\2\u0121\u0123\13\2\2\2\u0122")
        buf.write("\u0121\3\2\2\2\u0123\u0126\3\2\2\2\u0124\u0125\3\2\2\2")
        buf.write("\u0124\u0122\3\2\2\2\u0125\u0127\3\2\2\2\u0126\u0124\3")
        buf.write("\2\2\2\u0127\u0128\7,\2\2\u0128\u0129\7\61\2\2\u0129\u012a")
        buf.write("\3\2\2\2\u012a\u012b\b+\2\2\u012bV\3\2\2\2\u012c\u012d")
        buf.write("\7\61\2\2\u012d\u012e\7\61\2\2\u012e\u0132\3\2\2\2\u012f")
        buf.write("\u0131\n\7\2\2\u0130\u012f\3\2\2\2\u0131\u0134\3\2\2\2")
        buf.write("\u0132\u0130\3\2\2\2\u0132\u0133\3\2\2\2\u0133\u0135\3")
        buf.write("\2\2\2\u0134\u0132\3\2\2\2\u0135\u0136\b,\2\2\u0136X\3")
        buf.write("\2\2\2\u0137\u0139\t\b\2\2\u0138\u0137\3\2\2\2\u0139\u013a")
        buf.write("\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b")
        buf.write("\u013c\3\2\2\2\u013c\u013d\b-\2\2\u013dZ\3\2\2\2\16\2")
        buf.write("\u00e7\u00ff\u0105\u0107\u010f\u0112\u0117\u0119\u0124")
        buf.write("\u0132\u013a\3\b\2\2")
        return buf.getvalue()


class cocoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    Boolean = 33
    Identifier = 34
    Integer = 35
    String = 36
    Comment = 37
    LineComment = 38
    WS = 39

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            "'{'", "'}'", "'forbid'", "'message'", "'require'", "'find'", 
            "'in'", "'next-to'", "'('", "','", "')'", "'='", "'not'", "'and'", 
            "'or'", "'is'", "'before'", "'after'", "'between'", "'-'", "'<'", 
            "'>'", "'<='", "'>='", "'=='", "'!='", "'not in'", "'match'", 
            "'not match'", "'.'", "'['", "']'" ]

    symbolicNames = [ u"<INVALID>",
            "Boolean", "Identifier", "Integer", "String", "Comment", "LineComment", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "EscapeSequence", "Letter", "Digit", "NonZeroDigit", "ZeroDigit", 
                  "Boolean", "Identifier", "Integer", "String", "Comment", 
                  "LineComment", "WS" ]

    grammarFileName = "coco.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


