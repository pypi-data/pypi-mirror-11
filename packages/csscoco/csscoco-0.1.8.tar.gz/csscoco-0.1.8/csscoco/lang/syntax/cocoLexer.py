# Generated from java-escape by ANTLR 4.5
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2,")
        buf.write("\u0163\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3")
        buf.write("\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6")
        buf.write("\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3")
        buf.write("\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26")
        buf.write("\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!")
        buf.write("\3!\3!\3!\3\"\3\"\3#\3#\3$\3$\3$\3%\3%\3&\3&\5&\u00fb")
        buf.write("\n&\3\'\3\'\3(\3(\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)\3)")
        buf.write("\3)\3)\3)\3)\3)\3)\5)\u0113\n)\3*\3*\3*\3*\7*\u0119\n")
        buf.write("*\f*\16*\u011c\13*\3+\3+\3+\7+\u0121\n+\f+\16+\u0124\13")
        buf.write("+\5+\u0126\n+\3,\3,\7,\u012a\n,\f,\16,\u012d\13,\3,\5")
        buf.write(",\u0130\n,\5,\u0132\n,\3,\3,\6,\u0136\n,\r,\16,\u0137")
        buf.write("\3-\3-\3-\7-\u013d\n-\f-\16-\u0140\13-\3-\3-\3.\3.\3.")
        buf.write("\3.\7.\u0148\n.\f.\16.\u014b\13.\3.\3.\3.\3.\3.\3/\3/")
        buf.write("\3/\3/\7/\u0156\n/\f/\16/\u0159\13/\3/\3/\3\60\6\60\u015e")
        buf.write("\n\60\r\60\16\60\u015f\3\60\3\60\4\u013e\u0149\2\61\3")
        buf.write("\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16")
        buf.write("\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61")
        buf.write("\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G\2I\2K\2M\2O")
        buf.write("\2Q%S&U\'W(Y)[*]+_,\3\2\t\3\2))\4\2C\\c|\3\2\63;\3\2\62")
        buf.write("\62\4\2//aa\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u016f\2\3")
        buf.write("\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2")
        buf.write("\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2")
        buf.write("\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2")
        buf.write("\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3")
        buf.write("\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2")
        buf.write("/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67")
        buf.write("\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2")
        buf.write("A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2")
        buf.write("\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2")
        buf.write("\2\2_\3\2\2\2\3a\3\2\2\2\5c\3\2\2\2\7e\3\2\2\2\tl\3\2")
        buf.write("\2\2\13t\3\2\2\2\r|\3\2\2\2\17\u0081\3\2\2\2\21\u0087")
        buf.write("\3\2\2\2\23\u008a\3\2\2\2\25\u0092\3\2\2\2\27\u0094\3")
        buf.write("\2\2\2\31\u0096\3\2\2\2\33\u0098\3\2\2\2\35\u009a\3\2")
        buf.write("\2\2\37\u009e\3\2\2\2!\u00a2\3\2\2\2#\u00a5\3\2\2\2%\u00a8")
        buf.write("\3\2\2\2\'\u00af\3\2\2\2)\u00b5\3\2\2\2+\u00bd\3\2\2\2")
        buf.write("-\u00bf\3\2\2\2/\u00c1\3\2\2\2\61\u00c3\3\2\2\2\63\u00c6")
        buf.write("\3\2\2\2\65\u00c9\3\2\2\2\67\u00cc\3\2\2\29\u00cf\3\2")
        buf.write("\2\2;\u00d6\3\2\2\2=\u00dc\3\2\2\2?\u00e6\3\2\2\2A\u00e8")
        buf.write("\3\2\2\2C\u00ef\3\2\2\2E\u00f1\3\2\2\2G\u00f3\3\2\2\2")
        buf.write("I\u00f6\3\2\2\2K\u00fa\3\2\2\2M\u00fc\3\2\2\2O\u00fe\3")
        buf.write("\2\2\2Q\u0112\3\2\2\2S\u0114\3\2\2\2U\u0125\3\2\2\2W\u0131")
        buf.write("\3\2\2\2Y\u0139\3\2\2\2[\u0143\3\2\2\2]\u0151\3\2\2\2")
        buf.write("_\u015d\3\2\2\2ab\7}\2\2b\4\3\2\2\2cd\7\177\2\2d\6\3\2")
        buf.write("\2\2ef\7h\2\2fg\7q\2\2gh\7t\2\2hi\7d\2\2ij\7k\2\2jk\7")
        buf.write("f\2\2k\b\3\2\2\2lm\7o\2\2mn\7g\2\2no\7u\2\2op\7u\2\2p")
        buf.write("q\7c\2\2qr\7i\2\2rs\7g\2\2s\n\3\2\2\2tu\7t\2\2uv\7g\2")
        buf.write("\2vw\7s\2\2wx\7w\2\2xy\7k\2\2yz\7t\2\2z{\7g\2\2{\f\3\2")
        buf.write("\2\2|}\7h\2\2}~\7k\2\2~\177\7p\2\2\177\u0080\7f\2\2\u0080")
        buf.write("\16\3\2\2\2\u0081\u0082\7y\2\2\u0082\u0083\7j\2\2\u0083")
        buf.write("\u0084\7g\2\2\u0084\u0085\7t\2\2\u0085\u0086\7g\2\2\u0086")
        buf.write("\20\3\2\2\2\u0087\u0088\7k\2\2\u0088\u0089\7p\2\2\u0089")
        buf.write("\22\3\2\2\2\u008a\u008b\7p\2\2\u008b\u008c\7g\2\2\u008c")
        buf.write("\u008d\7z\2\2\u008d\u008e\7v\2\2\u008e\u008f\7/\2\2\u008f")
        buf.write("\u0090\7v\2\2\u0090\u0091\7q\2\2\u0091\24\3\2\2\2\u0092")
        buf.write("\u0093\7*\2\2\u0093\26\3\2\2\2\u0094\u0095\7.\2\2\u0095")
        buf.write("\30\3\2\2\2\u0096\u0097\7+\2\2\u0097\32\3\2\2\2\u0098")
        buf.write("\u0099\7?\2\2\u0099\34\3\2\2\2\u009a\u009b\7p\2\2\u009b")
        buf.write("\u009c\7q\2\2\u009c\u009d\7v\2\2\u009d\36\3\2\2\2\u009e")
        buf.write("\u009f\7c\2\2\u009f\u00a0\7p\2\2\u00a0\u00a1\7f\2\2\u00a1")
        buf.write(" \3\2\2\2\u00a2\u00a3\7q\2\2\u00a3\u00a4\7t\2\2\u00a4")
        buf.write("\"\3\2\2\2\u00a5\u00a6\7k\2\2\u00a6\u00a7\7u\2\2\u00a7")
        buf.write("$\3\2\2\2\u00a8\u00a9\7d\2\2\u00a9\u00aa\7g\2\2\u00aa")
        buf.write("\u00ab\7h\2\2\u00ab\u00ac\7q\2\2\u00ac\u00ad\7t\2\2\u00ad")
        buf.write("\u00ae\7g\2\2\u00ae&\3\2\2\2\u00af\u00b0\7c\2\2\u00b0")
        buf.write("\u00b1\7h\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7g\2\2\u00b3")
        buf.write("\u00b4\7t\2\2\u00b4(\3\2\2\2\u00b5\u00b6\7d\2\2\u00b6")
        buf.write("\u00b7\7g\2\2\u00b7\u00b8\7v\2\2\u00b8\u00b9\7y\2\2\u00b9")
        buf.write("\u00ba\7g\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7p\2\2\u00bc")
        buf.write("*\3\2\2\2\u00bd\u00be\7/\2\2\u00be,\3\2\2\2\u00bf\u00c0")
        buf.write("\7>\2\2\u00c0.\3\2\2\2\u00c1\u00c2\7@\2\2\u00c2\60\3\2")
        buf.write("\2\2\u00c3\u00c4\7>\2\2\u00c4\u00c5\7?\2\2\u00c5\62\3")
        buf.write("\2\2\2\u00c6\u00c7\7@\2\2\u00c7\u00c8\7?\2\2\u00c8\64")
        buf.write("\3\2\2\2\u00c9\u00ca\7?\2\2\u00ca\u00cb\7?\2\2\u00cb\66")
        buf.write("\3\2\2\2\u00cc\u00cd\7#\2\2\u00cd\u00ce\7?\2\2\u00ce8")
        buf.write("\3\2\2\2\u00cf\u00d0\7p\2\2\u00d0\u00d1\7q\2\2\u00d1\u00d2")
        buf.write("\7v\2\2\u00d2\u00d3\7\"\2\2\u00d3\u00d4\7k\2\2\u00d4\u00d5")
        buf.write("\7p\2\2\u00d5:\3\2\2\2\u00d6\u00d7\7o\2\2\u00d7\u00d8")
        buf.write("\7c\2\2\u00d8\u00d9\7v\2\2\u00d9\u00da\7e\2\2\u00da\u00db")
        buf.write("\7j\2\2\u00db<\3\2\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de")
        buf.write("\7q\2\2\u00de\u00df\7v\2\2\u00df\u00e0\7\"\2\2\u00e0\u00e1")
        buf.write("\7o\2\2\u00e1\u00e2\7c\2\2\u00e2\u00e3\7v\2\2\u00e3\u00e4")
        buf.write("\7e\2\2\u00e4\u00e5\7j\2\2\u00e5>\3\2\2\2\u00e6\u00e7")
        buf.write("\7\60\2\2\u00e7@\3\2\2\2\u00e8\u00e9\7k\2\2\u00e9\u00ea")
        buf.write("\7i\2\2\u00ea\u00eb\7p\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed")
        buf.write("\7t\2\2\u00ed\u00ee\7g\2\2\u00eeB\3\2\2\2\u00ef\u00f0")
        buf.write("\7]\2\2\u00f0D\3\2\2\2\u00f1\u00f2\7_\2\2\u00f2F\3\2\2")
        buf.write("\2\u00f3\u00f4\7^\2\2\u00f4\u00f5\t\2\2\2\u00f5H\3\2\2")
        buf.write("\2\u00f6\u00f7\t\3\2\2\u00f7J\3\2\2\2\u00f8\u00fb\5O(")
        buf.write("\2\u00f9\u00fb\5M\'\2\u00fa\u00f8\3\2\2\2\u00fa\u00f9")
        buf.write("\3\2\2\2\u00fbL\3\2\2\2\u00fc\u00fd\t\4\2\2\u00fdN\3\2")
        buf.write("\2\2\u00fe\u00ff\t\5\2\2\u00ffP\3\2\2\2\u0100\u0101\7")
        buf.write("v\2\2\u0101\u0102\7t\2\2\u0102\u0103\7w\2\2\u0103\u0113")
        buf.write("\7g\2\2\u0104\u0105\7V\2\2\u0105\u0106\7t\2\2\u0106\u0107")
        buf.write("\7w\2\2\u0107\u0113\7g\2\2\u0108\u0109\7h\2\2\u0109\u010a")
        buf.write("\7c\2\2\u010a\u010b\7n\2\2\u010b\u010c\7u\2\2\u010c\u0113")
        buf.write("\7g\2\2\u010d\u010e\7H\2\2\u010e\u010f\7c\2\2\u010f\u0110")
        buf.write("\7n\2\2\u0110\u0111\7u\2\2\u0111\u0113\7g\2\2\u0112\u0100")
        buf.write("\3\2\2\2\u0112\u0104\3\2\2\2\u0112\u0108\3\2\2\2\u0112")
        buf.write("\u010d\3\2\2\2\u0113R\3\2\2\2\u0114\u011a\5I%\2\u0115")
        buf.write("\u0119\5I%\2\u0116\u0119\5K&\2\u0117\u0119\t\6\2\2\u0118")
        buf.write("\u0115\3\2\2\2\u0118\u0116\3\2\2\2\u0118\u0117\3\2\2\2")
        buf.write("\u0119\u011c\3\2\2\2\u011a\u0118\3\2\2\2\u011a\u011b\3")
        buf.write("\2\2\2\u011bT\3\2\2\2\u011c\u011a\3\2\2\2\u011d\u0126")
        buf.write("\5O(\2\u011e\u0122\5M\'\2\u011f\u0121\5K&\2\u0120\u011f")
        buf.write("\3\2\2\2\u0121\u0124\3\2\2\2\u0122\u0120\3\2\2\2\u0122")
        buf.write("\u0123\3\2\2\2\u0123\u0126\3\2\2\2\u0124\u0122\3\2\2\2")
        buf.write("\u0125\u011d\3\2\2\2\u0125\u011e\3\2\2\2\u0126V\3\2\2")
        buf.write("\2\u0127\u012b\5M\'\2\u0128\u012a\5K&\2\u0129\u0128\3")
        buf.write("\2\2\2\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012b\u012c")
        buf.write("\3\2\2\2\u012c\u0132\3\2\2\2\u012d\u012b\3\2\2\2\u012e")
        buf.write("\u0130\5O(\2\u012f\u012e\3\2\2\2\u012f\u0130\3\2\2\2\u0130")
        buf.write("\u0132\3\2\2\2\u0131\u0127\3\2\2\2\u0131\u012f\3\2\2\2")
        buf.write("\u0132\u0133\3\2\2\2\u0133\u0135\7\60\2\2\u0134\u0136")
        buf.write("\5K&\2\u0135\u0134\3\2\2\2\u0136\u0137\3\2\2\2\u0137\u0135")
        buf.write("\3\2\2\2\u0137\u0138\3\2\2\2\u0138X\3\2\2\2\u0139\u013e")
        buf.write("\t\2\2\2\u013a\u013d\5G$\2\u013b\u013d\n\2\2\2\u013c\u013a")
        buf.write("\3\2\2\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e")
        buf.write("\u013f\3\2\2\2\u013e\u013c\3\2\2\2\u013f\u0141\3\2\2\2")
        buf.write("\u0140\u013e\3\2\2\2\u0141\u0142\t\2\2\2\u0142Z\3\2\2")
        buf.write("\2\u0143\u0144\7\61\2\2\u0144\u0145\7,\2\2\u0145\u0149")
        buf.write("\3\2\2\2\u0146\u0148\13\2\2\2\u0147\u0146\3\2\2\2\u0148")
        buf.write("\u014b\3\2\2\2\u0149\u014a\3\2\2\2\u0149\u0147\3\2\2\2")
        buf.write("\u014a\u014c\3\2\2\2\u014b\u0149\3\2\2\2\u014c\u014d\7")
        buf.write(",\2\2\u014d\u014e\7\61\2\2\u014e\u014f\3\2\2\2\u014f\u0150")
        buf.write("\b.\2\2\u0150\\\3\2\2\2\u0151\u0152\7\61\2\2\u0152\u0153")
        buf.write("\7\61\2\2\u0153\u0157\3\2\2\2\u0154\u0156\n\7\2\2\u0155")
        buf.write("\u0154\3\2\2\2\u0156\u0159\3\2\2\2\u0157\u0155\3\2\2\2")
        buf.write("\u0157\u0158\3\2\2\2\u0158\u015a\3\2\2\2\u0159\u0157\3")
        buf.write("\2\2\2\u015a\u015b\b/\2\2\u015b^\3\2\2\2\u015c\u015e\t")
        buf.write("\b\2\2\u015d\u015c\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u015d")
        buf.write("\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0161\3\2\2\2\u0161")
        buf.write("\u0162\b\60\2\2\u0162`\3\2\2\2\22\2\u00fa\u0112\u0118")
        buf.write("\u011a\u0122\u0125\u012b\u012f\u0131\u0137\u013c\u013e")
        buf.write("\u0149\u0157\u015f\3\b\2\2")
        return buf.getvalue()


class cocoLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    Boolean = 35
    Identifier = 36
    Integer = 37
    Decimal = 38
    String = 39
    Comment = 40
    LineComment = 41
    WS = 42

    modeNames = [ u"DEFAULT_MODE" ]

    literalNames = [ u"<INVALID>",
            "'{'", "'}'", "'forbid'", "'message'", "'require'", "'find'", 
            "'where'", "'in'", "'next-to'", "'('", "','", "')'", "'='", 
            "'not'", "'and'", "'or'", "'is'", "'before'", "'after'", "'between'", 
            "'-'", "'<'", "'>'", "'<='", "'>='", "'=='", "'!='", "'not in'", 
            "'match'", "'not match'", "'.'", "'ignore'", "'['", "']'" ]

    symbolicNames = [ u"<INVALID>",
            "Boolean", "Identifier", "Integer", "Decimal", "String", "Comment", 
            "LineComment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "EscapeSequence", "Letter", "Digit", 
                  "NonZeroDigit", "ZeroDigit", "Boolean", "Identifier", 
                  "Integer", "Decimal", "String", "Comment", "LineComment", 
                  "WS" ]

    grammarFileName = "coco.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


