Metadata-Version: 1.1
Name: subler
Version: 0.4.2
Summary: Python interface to the Subler style metadata tagging.
Home-page: https://github.com/moogar0880/PySubler
Author: Jonathan Nappi
Author-email: moogar@comcast.net
License: UNKNOWN
Description: PySubler
        ========
        
        .. image:: https://travis-ci.org/moogar0880/PySubler.svg
            :target: https://travis-ci.org/moogar0880/PySubler
            :alt: Travis CI Status
        
        .. image:: https://coveralls.io/repos/moogar0880/PySubler/badge.svg
            :target: https://coveralls.io/r/moogar0880/PySubler
            :alt: Coverage
        
        Simple Python interface to the SublerCLI utility to make scripting metadata
        tagging with `SublerCLI <https://bitbucket.org/galad87/sublercli>`_. even easier.
        Full documentation can be found on `Read The Docs <http://pysubler.readthedocs.org/en/latest/>`_.
        
        Install
        -------
        Installing is as easy as
        ::
        
            $ pip install subler
        
        
        Atoms
        -----
        
        To construct metadata you simply create a collection of Metadata Atoms like
        so,
        ::
        
            >>> artist = Atom('Artist', 'Linkin Park')
            >>> album = Atom('Album', 'Hybrid Theory')
            >>> metadata = [artist, album]
        
        Tagging
        -------
        Then, you simply pass that through to a Subler instance and use the Subler tag
        method, like so,
        ::
        
            >>> subler = Subler(path_to_source_file, dest=path_to_dest_file,
                                metadata=metadata)
            >>> subler.tag()
        
        
        Interactive Tagging
        -------------------
        As of PySubler version 0.4.0 you can optionally use the `pysubler` command line
        utility to interactively write metadata to your files. More information is provided
        in the `Docs <http://pysubler.readthedocs.org/en/latest/>`_, but the gist of
        interactive tagging is to run the `pysubler` cli like so
        ::
        
            $ pysubler /path/to/your/file.m4v
        
        You will then be prompted with a template that you can fill in with all sorts of
        provided metadata that will then be written to your file.
        
        
        
        Release History
        ---------------
        0.4.2 (2015-07-21)
        ++++++++++++++++++
        
        * Fixed an issue with improperly escaping metadata for use with `subprocess.check_output`
        * Added improved DEBUG logging for generated commands and their results
        * Improved the default `Subler.dest` attibute to create a unique destination filename
        * Added a collection of automated tests for Travis CI
        * Added Travis CI support
        
        0.4.0 (2014-09-20)
        ++++++++++++++++++
        
        * Added subler.tools module
        * Added subler.cli module which provides the interactive pysubler commandline tool
        * Added subler.subler.Subler.existing_metadata_collection property
        * Fixed bug with default Subler dest attribute
        
        0.3.1 (2014-09-14)
        ++++++++++++++++++
        
        * Bug fix to keep RTD happy
        
        0.3.0 (2014-09-14)
        ++++++++++++++++++
        
        * Addition of subler.utils module for utility functions
        * More intuitive SublerCLI executable path discovery
        * Added better shell escaping for SublerCLI arguments
        * Fixed SublerCLI version property
        * Fixed tracks property for outputting the track listings of the source file
        * Subler existing_metadata property is now returned as a list of Atoms
        
        0.2.0 (2014-06-21)
        ++++++++++++++++++
        
        * Initial release
        
Platform: UNKNOWN
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Natural Language :: English
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Environment :: MacOS X
Classifier: Operating System :: MacOS :: MacOS X
