Metadata-Version: 1.1
Name: flask2postman
Version: 1.1.1
Summary: flask2postman
Home-page: https://github.com/1000mercis/flask2postman
Author: Guillaume Gelin
Author-email: ramnes@1000mercis.com
License: UNKNOWN
Description: .. _Postman: https://www.getpostman.com/
        .. _Flask: http://flask.pocoo.org/
        
        =============
        flask2postman
        =============
        
        A tool that creates a Postman_ collection from a Flask_ application.
        
        
        Install
        =======
        
        .. code-block:: sh
        
            $ pip install flask2postman
        
        
        Example
        =======
        
        We have a Flask project called "example", (see :code:`example.py`), and we want
        to generate a Postman collection out of it.
        
        We just need to tell :code:`flask2postman` how to import the Flask instance, and
        optionally give a name to the collection:
        
        .. code-block:: sh
        
            $ flask2postman example.app --name "Example Collection" > example.json
        
        This will generate the JSON configuration, and write it into the
        :code:`example.json` file.
        
        Then we just have to import this file into Postman ("Import Collection" button,
        left panel, top right), and profit:
        
        .. image:: https://raw.githubusercontent.com/1000mercis/flask2postman/master/img/screenshot.jpg
            :alt: Postman screenshot
        
        
        Usage
        =====
        
        .. code-block:: sh
        
            usage: flask2postman [-h] [-n NAME] [-b BASE_URL] [-a] flask_instance
        
            positional arguments:
              flask_instance
        
            optional arguments:
              -h, --help            show this help message and exit
              -n NAME, --name NAME  Postman collection name (default: current directory
                                    name)
              -b BASE_URL, --base_url BASE_URL
                                    the base of every URL (default: {{base_url}})
              -a, --all             also generate OPTIONS/HEAD methods
              -i, --indent          indent the output
        
        
        License
        =======
        
        MIT
        
Platform: OS Independent
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Environment :: Web Environment
Classifier: Framework :: Flask
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: Intended Audience :: System Administrators
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.0
Classifier: Programming Language :: Python :: 3.1
Classifier: Programming Language :: Python :: 3.2
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Classifier: Topic :: Software Development :: Testing
Classifier: Topic :: Utilities
