## This is an example of a rank model config file for scoring variants with genmod score.
## The config file consists of two types of sections:
## Either it is a section named 'Plugin' that contains the metadata of the config file.
## The 'Plugin' section should include 'name' that is the name of the rank model and
## a 'version'.
## All the other sections represent fields in the vcf file that are about to be scored.
## There are several mandatory fields for these section for parsing. These are:
##
## 'vcf_field' value in [CHROM,POS,ID,REF,ALT,FILTER,QUAL,FILTER,INFO,FORMAT,sample_id]
## This describe in which column of the vcf file that we should search
##
## 'data_type' value in [integer, float, flag, character, and string.]
## This describes the data type that is expected by the parser.
##
## 'data_number' value in [A,G,.,R]
## Describes the number of values expected.(see vcf spec. for v 4.2)
##
## 'category' The category connects different sections to each other
## For example one might want to score all alle_frequencies together in such a way
## that is one type of frequency is high the variant should get a low score
##
## 'category_aggregation' value in [sum, min, max]
## This is how values from different sections within the same category should be scored
##
## 'record_aggregation' [min, max]
## This describes how we should handle the situation where we have several values
## for one position
##
## If there is a possibility of multiple values in one record we need to specify a list
## of 'field_separators'. This is a list since one record can have several separators
## for example 'GeneticModels=1:AR_hom|AR_hom_dn, 2:AD' we need to describe with 
## 'field_separators' = ',',':','|'


##Section [Name]:
##	Mandatory:
##		Section[Type] - eval first
## 		if section[Type] = Plugin
##			Mandatory
##				Name
##				Version
## 	Alterantive:
## 		if section[Type] = VCF
## 			Mandatory
##	 			Data_type - [Integer, float, string]
##				Category - Predefined check - IF true enforce rules
##				Category_agg - [sum, min, max]
##				Record_agg - [min, max]
##				vcf_field - [INFO, CHROM, FILTER, POS, SampleID]
##				vcf_field_data_number [1, A, ., R]
##				score-X..n
##				value-X..n
##				value-notrecorded = na:na
##				if VCF_field eq INFO 
##					vcf_info_key
##					field_separator - read as list instead of string (",", ":",...)
##			Alternative
##				vcf_field_description
##
##Test:
##data_type: String expect value-X eq string

[Plugin]
  version = 1.0
  name = rank_model_minimal
  
[1000GAF]
  [[data_format]]
    type = vcf
  [[data_field]]
    field = INFO
    info_key = 1000GAF
    data_type = float
    category_aggregate = min
    category = allele_frequency
    record_aggregate = max
    field_separators = ',',':','|'
    description = "1000 genomes frequency"
  [[not_reported]]
    score = 3
    operator = na
    value = na
  [[rare]]
    score = 2
    operator = le
    value = 0.05
  [[intermediate]]
    score = 1
    operator = le
    value = 0.05
  [[common]]
    score = -12
    operator = gt
    value = 0.05
  

