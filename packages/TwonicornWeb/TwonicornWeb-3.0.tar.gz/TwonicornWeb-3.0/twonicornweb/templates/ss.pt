<!--!  Copyright 2015 CityGrid Media, LLC Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
-->
<div metal:use-macro="layout">
    <div metal:fill-slot="content">

      <script src="/static/jquery-2.1.3.min.js"></script>
      <script src="/static/jquery.validate.min.js"></script>
      <script src="/static/additional-methods.min.js"></script>
      <script>
        $(function() {

          function overlay() {
            var over = '<div id="overlay">' +
                '<div id="loading_c">' +
                '<h1 id="loading_h">Processing Your Request</h1>' +
                '<img id="loading_i" src="/static/loading.gif?' + new Date().getTime() + '">' +
                '</div>' +
                '</div>';
            $(over).appendTo('body');
          }

          $('#btnSubmitConfirm').on('click', function(evt) {
            evt.preventDefault();
            overlay();
            setTimeout(function(){
              $("#confirm").submit();
            }, 500);
          });

          $('#btnSubmitEdit').on('click', function(evt) {
            evt.preventDefault();
            overlay();
            setTimeout(function(){
              $("#edit").submit();
            }, 500);
          });

          $("#ss_cb_autosnap").change(function() {
              if(this.checked) {
                $( "#code_review_header" ).fadeOut(1000);
                $( "#code_review_input" ).fadeOut(1000);
              } else {
                $( "#code_review_header" ).fadeIn(1000).show();
                $( "#code_review_input" ).fadeIn(1000).show();
              }
          });

          $('#error_msg_p').fadeIn(1500).show();

          // FIXME: eliminate duplicate code.
          // Only show auto snapshotting option for types that support it
          $(document.body).on('change', '[id=project_type]' ,function(){
            if ($.inArray($(this).val(), ["war", "jar"]) > -1) {
                $( "#autosnap_header" ).fadeIn(1000).show();
                $( "#autosnap_cb" ).fadeIn(1000).show();
            } else {
                $('#ss_cb_autosnap').prop('checked', false);
                $( "#autosnap_header" ).fadeOut(1000);
                $( "#autosnap_cb" ).fadeOut(1000);
            }
          });

          // Only show abs job option for types that support it
          $(document.body).on('change', '[id=project_type]' ,function(){
            if ($.inArray($(this).val(), ["python", "jar", "tar"]) > -1) {
                $( "#abs_header" ).fadeIn(1000).show();
                $( "#abs_cb" ).fadeIn(1000).show();
            } else {
                $('#ss_cb_skel').prop('checked', false);
                $( "#abs_header" ).fadeOut(1000);
                $( "#abs_cb" ).fadeOut(1000);
            }
          });

          // Only show server class option for types that require it
          $(document.body).on('change', '[id=project_type]' ,function(){
            if ($.inArray($(this).val(), ["war"]) > -1) {
                $( "#ct_class_header" ).fadeIn(1000).show();
                $( "#ct_class_input" ).fadeIn(1000).show();
            } else {
                $( "#ct_class_header" ).fadeOut(1000);
                $( "#ct_class_input" ).fadeOut(1000);
            }
          });

          // These are requird for the initial load/edit pages.
          // Hide auto snapshotting option for unsupported types
          var pt = document.getElementById("project_type");
          var selectedValue = pt.options[pt.selectedIndex].value;
          if ($.inArray(selectedValue, ["", "python", "tar"]) > -1) {
            $('#ss_cb_autosnap').prop('checked', false);
            $( "#autosnap_header" ).hide();
            $( "#autosnap_cb" ).hide();
          }
          // Hide auto abs job option for unsupported types
          if ($.inArray(selectedValue, ["", "war"]) > -1) {
            $('#ss_cb_skel').prop('checked', false);
            $( "#abs_header" ).hide();
            $( "#abs_cb" ).hide();
          }
          // Hide server class option for types that don't require it
          if ($.inArray(selectedValue, ["", "jar", "tar", "python"]) > -1) {
            $( "#ct_class_header" ).hide();
            $( "#ct_class_input" ).hide();
          }

          $.validator.addMethod("projectRegex", function(value, element) {
              return this.optional(element) || /^[a-z0-9\-\s]+$/i.test(value);
          }, "Project name must contain only letters, numbers, spaces, or dashes.");
      
          $('#preProcess').validate({
              wrapper: "span",
              errorClass: "invalid",
              rules: {
                  project_type: {
                      required: true,
                  },
                  project_name: {
                      required: true,
                      projectRegex: true,
                      minlength: 5
                  },
                  code_review: {
                      required: true,
                  },
                  job_prefix: {
                      required: true,
                      lettersonly: true,
                      rangelength: [2, 20]
                  },
                  job_server: {
                      required: true,
                  }
              },
              messages: {
                  "project_name": {
                      required: "Please enter a project name",
                      loginRegex: "Project format not valid"
                  },
                  "job_prefix": {
                      required: "Please enter a job prefix"
                  }
              },
              errorPlacement: function(error, element) {
                  error.insertAfter(element);
              },
              submitHandler: function(form) {  
                  overlay();
                  setTimeout(function(){
                    form.submit(); 
                  }, 500);
              }
          });

        });

      </script>

      <div tal:condition="not confirm and not processed" class="center" id="ss_form_c">
        <form id="preProcess" class="ss_form" action="/ss" method="POST" onsubmit="return(validate());">
          <input type="hidden" name="form.preprocess"/>
            <div tal:condition="error_msg">
              <h2 class="error">Validation Failure</h2>
              <p id="error_msg_p" class="hidden red">${error_msg}</p>
            </div>
            <div>
              <h2>Project type</h2>
            </div>
            <div>
                <p>The type of application you are developing. This will determine which Jenkins job templates to use, and how the application will be created in twonicorn.
                <p>
                <select id="project_type" name="project_type" title="Please select a project type.">
                  <option tal:condition=" not ui.project_type" value="" selected>Select...</option>
                  <option tal:repeat="item artifact_types" tal:attributes="value item.name; selected item.name == ui.project_type" tal:content="item.name">some_type</option>
                </select>
            </div>
            <div>
              <h2>Project Name</h2>
            </div>
            <div>
                <p>The name of the project. This will be used to name the git repos, Jenkins jobs, deployment directory paths, and must match the name you set your package/artifact to for jar and python projects.
                <p>
                <input type="text" 
                       id="project_name"
                       name="project_name"
                       placeholder="Name of your project"
                       tal:attributes="value ui.project_name if ui.project_name else None"
                       title="Project name must contain only letters, numbers, spaces, or dashes."/>
            </div>
            <div id="autosnap_header">
              <h2>Auto Tagging</h2>
            </div>
            <div id="autosnap_cb">
                <p>Would you like to use automatic release tagging (maven projects only)? Note: this will automatically disable code review on your git repos.
                <p>
                  <input id="ss_cb_autosnap" type="checkbox" name="autosnap" value="true" tal:attributes="checked 'True' if ui.autosnap else None">Use maven automatic snapshotting?</input>
            </div>
            <div id="code_review_header" tal:attributes="class 'hidden' if ui.autosnap else None">
              <h2>Code Review?</h2>
            </div>
            <div id="code_review_input" tal:attributes="class 'hidden' if ui.autosnap else None">
                <p>Whether or not you would like Gerrit code review enabled for your project.
                <p>
                <select id="code_review" name="code_review" required title="Please select if you would like code review or not.">
                  <option value="false" tal:attributes="selected ui.code_review == 'false'">No</option>
                  <option value="true" tal:attributes="selected ui.code_review == 'true'">Yes</option>
                </select>
            </div>
            <div>
              <h2>Job Prefix</h2>
            </div>
            <div>
              <p>A two to twenty character prefix to be used in the Jenkins job names.
              <p>
              <input type="text" 
                     id="job_prefix" 
                     name="job_prefix" 
                     placeholder="PREFIX" tal:attributes="value ui.job_prefix if ui.job_prefix else None"
                     title="Prefix must be between 2 and 20 letters only."/>
            </div>
            <div>
              <h2>Job Server</h2>
            </div>
            <div>
                <p>What Jenkins instances you want your build/run jobs created on.
                <p>
                <select id="job_server" name="job_server" title="Please select your jenkins instance.">
                  <option tal:condition=" not ui.job_server" value="" selected>Select...</option>
                  <option tal:repeat="item jenkins_instances" tal:attributes="value item.instance_name ; selected item.instance_name == ui.job_server" tal:content="item.instance_name">jenkins</option>
                </select>
            </div>
            <div id="abs_header">
              <h2>ABS Skeleton Job</h2>
            </div>
            <div id="abs_cb">
                <p>Would you like an ABS skeleton job created with the twonicorn execute shell?
                <p>
                  <input id="ss_cb_skel" type="checkbox" name="job_abs" value="job_abs" tal:attributes="checked 'True' if ui.job_abs else None">Create abs skeleton job?</input>
            </div>
            <div id="ct_class_header">
              <h2>Server Class</h2>
            </div>
            <div id="ct_class_input">
              <p>the three letter identifier of the server server class that this application will run on (i.e. paw, rbl, etc.). Used to tell the rolling restart job what servers to restart.
              <p>
              <input type="text"
                     id="ct_class"
                     name="ct_class"
                     placeholder="tla" tal:attributes="value ui.ct_class if ui.ct_class else None"
                     title="Server class must be exactly 3 letters only."/>
            </div>

            <div id="ss_submit">
              <input id="submit_btn" class="button" type="submit" name="btnSubmitPre" value="Review"/>
            </div>
        </form>

      </div>

      <div tal:condition="confirm">
        <div class="center">
          <div>
            <div class="center">
              <h2>We are ready to create the following resources. Continue?</h2>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Git Repos</h2>
                </li>
                <li tal:content="'Code Review: Yes' if ui.code_review == 'true' else 'Code Review: No'">
                <li>
                  ${ui.git_code_repo}
                </li>
                <li>
                  ${ui.git_conf_repo}
                </li>
              </ul>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Jenkins Jobs</h2>
                </li>
                <li tal:condition="ui.code_review == 'true'">
                  ${ui.job_review_url}
                </li>
                <li tal:condition="ui.autosnap == 'true'">
                  ${ui.job_autosnap_url}
                </li>
                <li>
                  ${ui.job_code_url}
                </li>
                <li>
                  ${ui.job_conf_url}
                </li>
                <li tal:condition="ui.job_rolling_restart_url" tal:content="ui.job_rolling_restart_url"></li>
                <li tal:condition="ui.job_abs_url" tal:content="ui.job_abs_url"></li>
              </ul>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Installation dirs</h2>
                </li>
                <li>
                  ${ui.dir_app}
                </li>
                <li>
                  ${ui.dir_conf}
                </li>
              </ul>
            </div>
          </div>
          <div id="ss_submit" class="center">
                <form id="confirm" class="cp_form" action="/ss" method="POST">
                  <input type="hidden" name="form.confirm"/>
                  <input type="hidden" name="project_type" value="${ui.project_type}"/>
                  <input type="hidden" name="project_name" value="${ui.project_name}"/>
                  <input type="hidden" name="code_review" value="${ui.code_review}"/>
                  <input tal:condition="ui.autosnap == 'true'" type="hidden" name="autosnap" value="${ui.autosnap}"/>
                  <input type="hidden" name="job_prefix" value="${ui.job_prefix}"/>
                  <input type="hidden" name="job_server" value="${ui.job_server}"/>
                  <input type="hidden" name="job_abs" value="${ui.job_abs}"/>
                  <input type="hidden" name="ct_class" value="${ui.ct_class}"/>
                  <input id="btnSubmitConfirm" class="button" type="submit" name="btnSubmitConfirm" value="Confirm"/>
                </form>
                <form id="edit" class="cp_form" action="/ss" method="POST">
                  <input type="hidden" name="form.edit"/>
                  <input type="hidden" name="project_type" value="${ui.project_type}"/>
                  <input type="hidden" name="project_name" value="${ui.project_name}"/>
                  <input type="hidden" name="code_review" value="${ui.code_review}"/>
                  <input tal:condition="ui.autosnap == 'true'" type="hidden" name="autosnap" value="${ui.autosnap}"/>
                  <input type="hidden" name="job_prefix" value="${ui.job_prefix}"/>
                  <input type="hidden" name="job_server" value="${ui.job_server}"/>
                  <input type="hidden" name="job_abs" value="${ui.job_abs}"/>
                  <input type="hidden" name="ct_class" value="${ui.ct_class}"/>
                  <input id="btnSubmitEdit" class="button" type="submit" name="btnSubmitEdit" value="Edit"/>
                </form>
          </div>
        </div>
      </div> <!-- confirm -->

      <div tal:condition="processed">
        <div class="center">
          <div>
            <div class="center">
              <h2 class="green">Successfully created your self service application!</h2>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Git Repos</h2>
                </li>
                <li tal:content="'Code Review: Yes' if ui.code_review == 'true' else 'Code Review: No'">
                <li>
                      git clone ${ui.git_code_repo}<br>
                      <a href='${ui.git_code_repo_url}'>${ui.git_code_repo_url}</a>
                </li>
                <li>
                      git clone ${ui.git_conf_repo}<br>
                      <a href='${ui.git_conf_repo_url}'>${ui.git_conf_repo_url}</a>
                </li>
              </ul>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Jenkins Jobs</h2>
                </li>
                <li tal:condition="ui.code_review == 'true'">
                  <a href='${ui.job_review_url}'>${ui.job_review_url}</a>
                </li>
                <li tal:condition="ui.autosnap == 'true'">
                  <a href='${ui.job_autosnap_url}'>${ui.job_autosnap_url}</a>
                </li>
                <li>
                  <a href='${ui.job_code_url}'>${ui.job_code_url}</a>
                </li>
                <li>
                  <a href='${ui.job_conf_url}'>${ui.job_conf_url}</a>
                </li>
                <li tal:condition="ui.job_abs_url">
                  <a href='${ui.job_abs_url}'>${ui.job_abs_url}</a>
                </li>
                <li tal:condition="ui.job_rolling_restart_url">
                  <a href='${ui.job_rolling_restart_url}'>${ui.job_rolling_restart_url}</a>
                </li>
              </ul>
            </div>
            <div class="cp_form">
              <ul>
                <li>
                  <h2>Twonicorn Application</h2>
                </li>
                <li>
                  <a href='${ui.app_url}'>Take me to my app!</a>
                </li>
              </ul>
            </div>
          </div>
        </div>

      </div> <!-- processed -->

  </div>
</div>
