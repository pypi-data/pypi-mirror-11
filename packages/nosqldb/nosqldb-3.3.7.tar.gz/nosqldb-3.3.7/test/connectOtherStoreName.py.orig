# Note that since Factory.connect() was replaced by Factory.open() with only
# two parameters, this testcase is going to use such call instead.

from nosqldb import Factory
from nosqldb import Store
from nosqldb import ConnectionException
from nosqldb import IllegalArgumentException
from nosqldb import RequestTimeoutException
from testSetup import get_store
from testSetup import add_runtime_params
from testSetup import get_kvstore_config
from testSetup import host_port
from testSetup import helper_host

import unittest


class TestConnectOtherStore(unittest.TestCase):

    def setUp(self):
        self.store = get_store()

    def tearDown(self):
        if (self.store is not None):
            self.store.close()

    def testConnectStoreName(self):
        # check connect with a different store name
        # note that the proxy should be running connected to such store
        # you can specify such name using --storename parameter from
        # command line
        kvstore_config = get_kvstore_config()
        self.store = Factory.open(host_port, kvstore_config)
        self.assertTrue(self.store is not None)
        #self.assertRaises(ConnectionException, Factory.connect,
        #                  (hostport, helperhost), kvstoreconfig)


if __name__ == '__main__':
    add_runtime_params()
    unittest.main()
