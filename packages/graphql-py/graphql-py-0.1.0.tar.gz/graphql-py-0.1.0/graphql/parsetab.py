
# /Users/dvs/Dropbox/Code/graphql-py/graphql/parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'A74595E3963DFADB075097951C8D9F30'
    
_lr_action_items = {'FLOAT_VALUE':([22,23,27,29,30,31,32,35,58,83,93,94,96,97,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,125,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,149,150,151,153,157,158,159,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,102,-114,-116,-115,-62,-76,-89,-78,-77,102,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,135,-97,102,-99,-105,-118,-64,-83,-88,-85,-84,135,-86,-87,-82,-96,-98,102,-104,135,-101,-103,-110,-100,-102,135,-109,]),'NULL':([4,7,8,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,60,61,63,64,65,66,67,68,69,70,71,75,76,81,84,85,86,87,88,89,90,92,93,94,95,96,97,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,126,130,131,132,133,134,135,136,137,138,140,141,142,143,144,147,148,150,153,154,155,156,157,160,161,162,],[18,22,22,-12,-11,-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,22,-16,18,-68,-17,-66,-65,-69,-71,-34,22,-67,-18,22,-14,-13,22,-36,-51,-33,-49,22,-73,-31,-32,22,-30,-117,-35,-50,-56,22,-25,-26,-24,-53,-27,-28,-29,22,22,-40,-55,-54,-20,-52,-21,-22,-23,-63,-114,-116,22,-115,-62,-39,-76,-89,-78,-77,-94,-79,-92,22,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,-97,-105,22,-107,-118,-64,-83,-88,-85,-84,22,-86,-87,-82,-96,-104,-106,-101,-110,-112,22,-108,-100,-109,-111,-113,]),'TRUE':([4,7,8,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,60,61,63,64,65,66,67,68,69,70,71,75,76,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[19,23,23,-12,-11,-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,23,-16,19,-68,-17,-66,-65,-69,-71,-34,23,-67,-18,23,-14,-13,23,-36,-51,-33,-49,23,-73,-31,-32,23,-30,-117,-35,-50,-56,23,-25,-26,-24,-53,-27,-28,-29,23,23,-40,103,-55,-54,-20,-52,-21,-22,-23,-63,-114,-116,23,-115,-62,-39,-76,-89,-78,-77,103,-94,-79,-92,23,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,103,-97,103,-99,-105,23,-107,-118,-64,-83,-88,-85,-84,103,23,-86,-87,-82,-96,-98,103,-104,-106,103,-101,-103,-110,-112,23,-108,-100,-102,103,-109,-111,-113,]),'STRING_VALUE':([22,23,27,29,30,31,32,35,58,83,93,94,96,97,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,125,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,149,150,151,153,157,158,159,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,105,-114,-116,-115,-62,-76,-89,-78,-77,105,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,138,-97,105,-99,-105,-118,-64,-83,-88,-85,-84,138,-86,-87,-82,-96,-98,105,-104,138,-101,-103,-110,-100,-102,138,-109,]),'BRACE_R':([12,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,48,49,51,58,60,61,65,66,67,68,69,70,71,81,85,86,87,88,89,90,93,94,96,97,101,102,103,104,105,107,108,109,110,111,112,113,114,115,117,118,119,120,121,123,124,126,130,131,132,133,134,135,136,137,138,140,141,142,143,144,147,148,150,153,154,155,156,157,160,161,162,],[-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,40,-16,-68,-17,-66,-65,-69,-71,-34,-67,-18,-14,-13,-36,-51,-33,-49,-31,-32,-30,-117,-35,-50,-25,-26,-24,-53,-27,-28,-29,-40,-54,-20,-52,-21,-22,-23,-114,-116,-115,-62,-39,-76,-89,-78,-77,-94,-79,-92,130,-81,-74,-91,-95,-90,-80,-75,-93,-19,-119,-120,-61,-97,-105,147,-107,-118,-64,-83,-88,-85,-84,153,-86,-87,-82,-96,-104,-106,-101,-110,-112,160,-108,-100,-109,-111,-113,]),'BRACKET_L':([22,23,27,29,30,31,32,35,58,76,83,92,93,94,95,96,97,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,125,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,149,150,151,153,157,158,159,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,95,106,-63,-114,-116,95,-115,-62,-76,-89,-78,-77,106,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,139,-97,106,-99,-105,-118,-64,-83,-88,-85,-84,139,-86,-87,-82,-96,-98,106,-104,139,-101,-103,-110,-100,-102,139,-109,]),'BRACKET_R':([22,23,27,29,30,31,32,35,58,93,94,96,97,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,122,123,124,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,147,149,150,151,153,157,158,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,-114,-116,-115,-62,-76,-89,-78,-77,126,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,133,-120,-61,-97,144,-99,-105,-118,-64,-83,-88,-85,-84,150,-86,-87,-82,-96,-98,-104,157,-101,-103,-110,-100,-102,-109,]),'SPREAD':([7,12,14,15,16,17,18,19,21,22,23,24,25,27,28,29,30,31,32,33,35,36,39,40,42,43,44,45,48,49,51,60,61,65,66,67,68,69,70,71,81,85,86,87,88,89,90,101,120,],[26,-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,26,-16,-68,-17,-66,-65,-69,-71,-34,-67,-18,-14,-13,-36,-51,-33,-49,-31,-32,-30,-35,-50,-25,-26,-24,-53,-27,-28,-29,-40,-54,-20,-52,-21,-22,-23,-39,-19,]),'COLON':([22,23,27,29,30,31,32,33,35,62,129,152,],[-72,-70,-68,-66,-65,-69,-71,47,-67,83,146,159,]),'MUTATION':([0,1,2,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,60,61,63,64,65,66,67,68,69,70,71,72,74,75,76,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[10,-4,-6,16,10,-5,27,27,-12,-11,-41,-42,-46,-44,-43,-47,-45,-3,-15,-72,-70,27,-16,16,-68,-17,-66,-65,-69,-71,-34,27,-67,-18,27,-14,-13,27,-36,-51,-33,-49,27,-73,-31,-32,27,-30,-10,-117,-35,-50,-56,27,-25,-26,-24,-53,-27,-28,-29,-8,-9,27,27,-38,-40,107,-55,-54,-20,-52,-21,-22,-23,-7,-63,-114,-116,27,-115,-62,-37,-39,-76,-89,-78,-77,107,-94,-79,-92,27,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,107,-97,107,-99,-105,27,-107,-118,-64,-83,-88,-85,-84,107,27,-86,-87,-82,-96,-98,107,-104,-106,107,-101,-103,-110,-112,27,-108,-100,-102,107,-109,-111,-113,]),'BRACE_L':([0,22,23,27,29,30,31,32,33,35,37,43,45,48,49,51,53,54,56,57,58,59,61,66,68,70,71,73,80,82,83,85,87,90,93,94,96,97,98,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,125,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,149,150,151,153,157,158,159,160,],[7,-72,-70,-68,-66,-65,-69,-71,7,-67,7,-51,-49,7,7,7,7,7,-48,7,-117,7,-50,7,-53,7,7,7,7,7,110,-54,-52,7,-114,-116,-115,-62,-58,-76,-89,-78,-77,110,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,140,-97,110,-99,-105,-118,-64,-83,-88,-85,-84,140,-86,-87,-82,-96,-98,110,-104,140,-101,-103,-110,-100,-102,140,-109,]),'$end':([1,2,3,5,6,9,20,40,52,72,74,79,91,100,],[-4,-6,-2,-1,-5,0,-3,-13,-10,-8,-9,-38,-7,-37,]),'FRAGMENT':([0,1,2,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,60,61,63,64,65,66,67,68,69,70,71,72,74,75,76,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[4,-4,-6,14,4,-5,29,29,-12,-11,-41,-42,-46,-44,-43,-47,-45,-3,-15,-72,-70,29,-16,14,-68,-17,-66,-65,-69,-71,-34,29,-67,-18,29,-14,-13,29,-36,-51,-33,-49,29,-73,-31,-32,29,-30,-10,-117,-35,-50,-56,29,-25,-26,-24,-53,-27,-28,-29,-8,-9,29,29,-38,-40,109,-55,-54,-20,-52,-21,-22,-23,-7,-63,-114,-116,29,-115,-62,-37,-39,-76,-89,-78,-77,109,-94,-79,-92,29,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,109,-97,109,-99,-105,29,-107,-118,-64,-83,-88,-85,-84,109,29,-86,-87,-82,-96,-98,109,-104,-106,109,-101,-103,-110,-112,29,-108,-100,-102,109,-109,-111,-113,]),'DOLLAR':([22,23,27,29,30,31,32,35,55,58,77,78,83,93,94,96,97,99,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,126,127,128,130,133,134,135,136,137,138,141,142,143,144,145,146,147,150,153,157,160,],[-72,-70,-68,-66,-65,-69,-71,-67,75,-117,-60,75,75,-114,-116,-115,-62,-59,-76,-89,-78,-77,75,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,-97,75,-99,-105,-118,-64,-83,-88,-85,-84,-86,-87,-82,-96,-98,75,-104,-101,-110,-100,-109,]),'EQUALS':([22,23,27,29,30,31,32,35,58,93,94,96,97,121,123,133,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,-114,-116,-115,125,-119,-120,-118,]),'BANG':([22,23,27,29,30,31,32,35,58,93,96,133,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,121,123,-118,]),'AT':([12,14,15,16,17,18,19,22,23,27,29,30,31,32,33,35,37,42,43,45,48,51,53,56,57,58,59,61,68,71,85,87,98,],[-41,-42,-46,-44,-43,-47,-45,-72,-70,-68,-66,-65,-69,-71,50,-67,50,50,-51,50,50,50,50,-48,50,-117,50,-50,-53,50,-54,-52,-58,]),'ON':([7,8,10,11,12,13,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,60,61,63,64,65,66,67,68,69,70,71,75,76,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[31,31,-12,-11,-41,38,-42,-46,-44,-43,-47,-45,-15,-72,-70,31,-16,41,-68,-17,-66,-65,-69,-71,-34,31,-67,-18,31,-14,-13,31,-36,-51,-33,-49,31,-73,-31,-32,31,-30,-117,-35,-50,-56,31,-25,-26,-24,-53,-27,-28,-29,31,31,-40,114,-55,-54,-20,-52,-21,-22,-23,-63,-114,-116,31,-115,-62,-39,-76,-89,-78,-77,114,-94,-79,-92,31,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,114,-97,114,-99,-105,31,-107,-118,-64,-83,-88,-85,-84,114,31,-86,-87,-82,-96,-98,114,-104,-106,114,-101,-103,-110,-112,31,-108,-100,-102,114,-109,-111,-113,]),'FALSE':([4,7,8,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,60,61,63,64,65,66,67,68,69,70,71,75,76,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[15,32,32,-12,-11,-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,32,-16,15,-68,-17,-66,-65,-69,-71,-34,32,-67,-18,32,-14,-13,32,-36,-51,-33,-49,32,-73,-31,-32,32,-30,-117,-35,-50,-56,32,-25,-26,-24,-53,-27,-28,-29,32,32,-40,115,-55,-54,-20,-52,-21,-22,-23,-63,-114,-116,32,-115,-62,-39,-76,-89,-78,-77,115,-94,-79,-92,32,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,115,-97,115,-99,-105,32,-107,-118,-64,-83,-88,-85,-84,115,32,-86,-87,-82,-96,-98,115,-104,-106,115,-101,-103,-110,-112,32,-108,-100,-102,115,-109,-111,-113,]),'NAME':([4,7,8,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,58,60,61,63,64,65,66,67,68,69,70,71,75,76,81,83,84,85,86,87,88,89,90,92,93,94,95,96,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[12,30,30,-12,-11,-41,-42,-46,-44,-43,-47,-45,-15,-72,-70,30,-16,12,-68,-17,-66,-65,-69,-71,-34,30,-67,-18,30,-14,-13,30,-36,-51,-33,-49,30,-73,-31,-32,30,-30,-117,-35,-50,-56,30,-25,-26,-24,-53,-27,-28,-29,30,30,-40,113,-55,-54,-20,-52,-21,-22,-23,-63,-114,-116,30,-115,-62,-39,-76,-89,-78,-77,113,-94,-79,-92,30,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,113,-97,113,-99,-105,30,-107,-118,-64,-83,-88,-85,-84,113,30,-86,-87,-82,-96,-98,113,-104,-106,113,-101,-103,-110,-112,30,-108,-100,-102,113,-109,-111,-113,]),'PAREN_L':([22,23,27,29,30,31,32,33,35,37,51,68,],[-72,-70,-68,-66,-65,-69,-71,46,-67,55,46,46,]),'PAREN_R':([22,23,27,29,30,31,32,35,58,63,64,77,78,84,93,94,96,97,99,102,103,104,105,107,108,109,111,112,113,114,115,116,117,118,119,121,123,124,126,130,133,134,135,136,137,138,141,142,143,144,147,150,153,157,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,-56,85,-60,98,-55,-114,-116,-115,-62,-59,-76,-89,-78,-77,-94,-79,-92,-81,-74,-91,-95,-90,-57,-80,-75,-93,-119,-120,-61,-97,-105,-118,-64,-83,-88,-85,-84,-86,-87,-82,-96,-104,-101,-110,-100,-109,]),'INT_VALUE':([22,23,27,29,30,31,32,35,58,83,93,94,96,97,102,103,104,105,106,107,108,109,111,112,113,114,115,117,118,119,121,123,124,125,126,127,128,130,133,134,135,136,137,138,139,141,142,143,144,145,146,147,149,150,151,153,157,158,159,160,],[-72,-70,-68,-66,-65,-69,-71,-67,-117,118,-114,-116,-115,-62,-76,-89,-78,-77,118,-94,-79,-92,-81,-74,-91,-95,-90,-80,-75,-93,-119,-120,-61,143,-97,118,-99,-105,-118,-64,-83,-88,-85,-84,143,-86,-87,-82,-96,-98,118,-104,143,-101,-103,-110,-100,-102,143,-109,]),'QUERY':([0,1,2,4,5,6,7,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,58,60,61,63,64,65,66,67,68,69,70,71,72,74,75,76,79,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,153,154,155,156,157,158,159,160,161,162,],[11,-4,-6,17,11,-5,35,35,-12,-11,-41,-42,-46,-44,-43,-47,-45,-3,-15,-72,-70,35,-16,17,-68,-17,-66,-65,-69,-71,-34,35,-67,-18,35,-14,-13,35,-36,-51,-33,-49,35,-73,-31,-32,35,-30,-10,-117,-35,-50,-56,35,-25,-26,-24,-53,-27,-28,-29,-8,-9,35,35,-38,-40,119,-55,-54,-20,-52,-21,-22,-23,-7,-63,-114,-116,35,-115,-62,-37,-39,-76,-89,-78,-77,119,-94,-79,-92,35,-81,-74,-91,-95,-90,-57,-80,-75,-93,-19,-119,-120,-61,119,-97,119,-99,-105,35,-107,-118,-64,-83,-88,-85,-84,119,35,-86,-87,-82,-96,-98,119,-104,-106,119,-101,-103,-110,-112,35,-108,-100,-102,119,-109,-111,-113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'named_type':([38,41,76,95,],[56,56,93,93,]),'selection':([7,24,],[21,39,]),'const_value_list':([139,],[149,]),'variables':([37,],[53,]),'argument':([46,64,],[63,84,]),'object_field':([110,131,],[132,148,]),'argument_list':([46,],[64,]),'const_value':([125,139,149,159,],[134,151,158,162,]),'operation_definition':([0,5,],[6,6,]),'const_object_value':([125,139,149,159,],[136,136,136,136,]),'boolean_value':([83,106,125,127,139,146,149,159,],[104,104,137,104,137,104,137,137,]),'default_value':([97,],[124,]),'selection_set':([0,33,37,48,49,51,53,54,57,59,66,70,71,73,80,82,90,],[3,44,52,65,67,69,72,74,79,81,86,88,89,91,100,101,120,]),'fragment_name':([4,26,],[13,42,]),'object_field_list':([110,],[131,]),'field':([7,24,],[25,25,]),'directives':([33,37,42,48,51,53,57,59,71,],[49,54,60,66,70,73,80,82,90,]),'arguments':([33,51,68,],[48,71,87,]),'const_object_field':([140,155,],[154,161,]),'variable_name':([55,78,83,106,127,146,],[76,76,76,76,76,76,]),'document':([0,],[9,]),'type':([76,95,],[97,122,]),'fragment_spread':([7,24,],[28,28,]),'variable_list':([55,],[78,]),'directive':([33,37,42,45,48,51,53,57,59,71,],[43,43,43,61,43,43,43,43,43,43,]),'type_condition':([38,41,],[57,59,]),'enum_value':([83,106,125,127,139,146,149,159,],[108,108,141,108,141,108,141,141,]),'value_list':([106,],[127,]),'definition_list':([0,],[5,]),'object_value':([83,106,127,146,],[111,111,111,111,]),'variable':([55,78,83,106,127,146,],[77,99,112,112,112,112,]),'definition':([0,5,],[1,20,]),'non_null_type':([76,95,],[94,94,]),'name':([7,8,24,34,38,41,46,50,64,75,76,95,110,131,140,155,],[33,37,33,51,58,58,62,68,62,92,58,58,129,129,152,152,]),'directive_list':([33,37,42,48,51,53,57,59,71,],[45,45,45,45,45,45,45,45,45,]),'selection_list':([7,],[24,]),'const_object_field_list':([140,],[155,]),'value':([83,106,127,146,],[116,128,145,156,]),'alias':([7,24,],[34,34,]),'const_list_value':([125,139,149,159,],[142,142,142,142,]),'list_value':([83,106,127,146,],[117,117,117,117,]),'list_type':([76,95,],[96,96,]),'operation_type':([0,5,],[8,8,]),'fragment_definition':([0,5,],[2,2,]),'inline_fragment':([7,24,],[36,36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> document","S'",1,None,None,None),
  ('document -> definition_list','document',1,'p_document','parser.py',42),
  ('document -> selection_set','document',1,'p_document_shorthand','parser.py',48),
  ('definition_list -> definition_list definition','definition_list',2,'p_definition_list','parser.py',54),
  ('definition_list -> definition','definition_list',1,'p_definition_list_single','parser.py',60),
  ('definition -> operation_definition','definition',1,'p_definition','parser.py',66),
  ('definition -> fragment_definition','definition',1,'p_definition','parser.py',67),
  ('operation_definition -> operation_type name variables directives selection_set','operation_definition',5,'p_operation_definition1','parser.py',79),
  ('operation_definition -> operation_type name variables selection_set','operation_definition',4,'p_operation_definition2','parser.py',90),
  ('operation_definition -> operation_type name directives selection_set','operation_definition',4,'p_operation_definition3','parser.py',100),
  ('operation_definition -> operation_type name selection_set','operation_definition',3,'p_operation_definition4','parser.py',110),
  ('operation_type -> QUERY','operation_type',1,'p_operation_type','parser.py',116),
  ('operation_type -> MUTATION','operation_type',1,'p_operation_type','parser.py',117),
  ('selection_set -> BRACE_L selection_list BRACE_R','selection_set',3,'p_selection_set','parser.py',123),
  ('selection_list -> selection_list selection','selection_list',2,'p_selection_list','parser.py',129),
  ('selection_list -> selection','selection_list',1,'p_selection_list_single','parser.py',135),
  ('selection -> field','selection',1,'p_selection','parser.py',141),
  ('selection -> fragment_spread','selection',1,'p_selection','parser.py',142),
  ('selection -> inline_fragment','selection',1,'p_selection','parser.py',143),
  ('field -> alias name arguments directives selection_set','field',5,'p_field_all','parser.py',149),
  ('field -> name arguments directives selection_set','field',4,'p_field_optional1_1','parser.py',156),
  ('field -> alias name directives selection_set','field',4,'p_field_optional1_2','parser.py',163),
  ('field -> alias name arguments selection_set','field',4,'p_field_optional1_3','parser.py',169),
  ('field -> alias name arguments directives','field',4,'p_field_optional1_4','parser.py',175),
  ('field -> name directives selection_set','field',3,'p_field_optional2_1','parser.py',181),
  ('field -> name arguments selection_set','field',3,'p_field_optional2_2','parser.py',187),
  ('field -> name arguments directives','field',3,'p_field_optional2_3','parser.py',193),
  ('field -> alias name selection_set','field',3,'p_field_optional2_4','parser.py',199),
  ('field -> alias name directives','field',3,'p_field_optional2_5','parser.py',205),
  ('field -> alias name arguments','field',3,'p_field_optional2_6','parser.py',211),
  ('field -> alias name','field',2,'p_field_optional3_1','parser.py',217),
  ('field -> name arguments','field',2,'p_field_optional3_2','parser.py',223),
  ('field -> name directives','field',2,'p_field_optional3_3','parser.py',229),
  ('field -> name selection_set','field',2,'p_field_optional3_4','parser.py',235),
  ('field -> name','field',1,'p_field_optional4','parser.py',241),
  ('fragment_spread -> SPREAD fragment_name directives','fragment_spread',3,'p_fragment_spread1','parser.py',247),
  ('fragment_spread -> SPREAD fragment_name','fragment_spread',2,'p_fragment_spread2','parser.py',253),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition directives selection_set','fragment_definition',6,'p_fragment_definition1','parser.py',259),
  ('fragment_definition -> FRAGMENT fragment_name ON type_condition selection_set','fragment_definition',5,'p_fragment_definition2','parser.py',266),
  ('inline_fragment -> SPREAD ON type_condition directives selection_set','inline_fragment',5,'p_inline_fragment1','parser.py',273),
  ('inline_fragment -> SPREAD ON type_condition selection_set','inline_fragment',4,'p_inline_fragment2','parser.py',280),
  ('fragment_name -> NAME','fragment_name',1,'p_fragment_name','parser.py',286),
  ('fragment_name -> FRAGMENT','fragment_name',1,'p_fragment_name','parser.py',287),
  ('fragment_name -> QUERY','fragment_name',1,'p_fragment_name','parser.py',288),
  ('fragment_name -> MUTATION','fragment_name',1,'p_fragment_name','parser.py',289),
  ('fragment_name -> TRUE','fragment_name',1,'p_fragment_name','parser.py',290),
  ('fragment_name -> FALSE','fragment_name',1,'p_fragment_name','parser.py',291),
  ('fragment_name -> NULL','fragment_name',1,'p_fragment_name','parser.py',292),
  ('type_condition -> named_type','type_condition',1,'p_type_condition','parser.py',298),
  ('directives -> directive_list','directives',1,'p_directives','parser.py',304),
  ('directive_list -> directive_list directive','directive_list',2,'p_directive_list','parser.py',310),
  ('directive_list -> directive','directive_list',1,'p_directive_list_single','parser.py',316),
  ('directive -> AT name arguments','directive',3,'p_directive','parser.py',322),
  ('directive -> AT name','directive',2,'p_directive','parser.py',323),
  ('arguments -> PAREN_L argument_list PAREN_R','arguments',3,'p_arguments','parser.py',330),
  ('argument_list -> argument_list argument','argument_list',2,'p_argument_list','parser.py',336),
  ('argument_list -> argument','argument_list',1,'p_argument_list_single','parser.py',342),
  ('argument -> name COLON value','argument',3,'p_argument','parser.py',348),
  ('variables -> PAREN_L variable_list PAREN_R','variables',3,'p_variables','parser.py',354),
  ('variable_list -> variable_list variable','variable_list',2,'p_variable_list','parser.py',360),
  ('variable_list -> variable','variable_list',1,'p_variable_list_single','parser.py',366),
  ('variable -> variable_name type default_value','variable',3,'p_variable1','parser.py',372),
  ('variable -> variable_name type','variable',2,'p_variable2','parser.py',378),
  ('variable_name -> DOLLAR name','variable_name',2,'p_variable_name','parser.py',384),
  ('default_value -> EQUALS const_value','default_value',2,'p_default_value','parser.py',390),
  ('name -> NAME','name',1,'p_name','parser.py',396),
  ('name -> FRAGMENT','name',1,'p_name','parser.py',397),
  ('name -> QUERY','name',1,'p_name','parser.py',398),
  ('name -> MUTATION','name',1,'p_name','parser.py',399),
  ('name -> ON','name',1,'p_name','parser.py',400),
  ('name -> TRUE','name',1,'p_name','parser.py',401),
  ('name -> FALSE','name',1,'p_name','parser.py',402),
  ('name -> NULL','name',1,'p_name','parser.py',403),
  ('alias -> name COLON','alias',2,'p_alias','parser.py',409),
  ('value -> variable','value',1,'p_value','parser.py',415),
  ('value -> INT_VALUE','value',1,'p_value','parser.py',416),
  ('value -> FLOAT_VALUE','value',1,'p_value','parser.py',417),
  ('value -> STRING_VALUE','value',1,'p_value','parser.py',418),
  ('value -> boolean_value','value',1,'p_value','parser.py',419),
  ('value -> enum_value','value',1,'p_value','parser.py',420),
  ('value -> list_value','value',1,'p_value','parser.py',421),
  ('value -> object_value','value',1,'p_value','parser.py',422),
  ('const_value -> INT_VALUE','const_value',1,'p_const_value','parser.py',428),
  ('const_value -> FLOAT_VALUE','const_value',1,'p_const_value','parser.py',429),
  ('const_value -> STRING_VALUE','const_value',1,'p_const_value','parser.py',430),
  ('const_value -> boolean_value','const_value',1,'p_const_value','parser.py',431),
  ('const_value -> enum_value','const_value',1,'p_const_value','parser.py',432),
  ('const_value -> const_list_value','const_value',1,'p_const_value','parser.py',433),
  ('const_value -> const_object_value','const_value',1,'p_const_value','parser.py',434),
  ('boolean_value -> TRUE','boolean_value',1,'p_boolean_value','parser.py',440),
  ('boolean_value -> FALSE','boolean_value',1,'p_boolean_value','parser.py',441),
  ('enum_value -> NAME','enum_value',1,'p_enum_value','parser.py',447),
  ('enum_value -> FRAGMENT','enum_value',1,'p_enum_value','parser.py',448),
  ('enum_value -> QUERY','enum_value',1,'p_enum_value','parser.py',449),
  ('enum_value -> MUTATION','enum_value',1,'p_enum_value','parser.py',450),
  ('enum_value -> ON','enum_value',1,'p_enum_value','parser.py',451),
  ('list_value -> BRACKET_L value_list BRACKET_R','list_value',3,'p_list_value','parser.py',457),
  ('list_value -> BRACKET_L BRACKET_R','list_value',2,'p_list_value','parser.py',458),
  ('value_list -> value_list value','value_list',2,'p_value_list','parser.py',464),
  ('value_list -> value','value_list',1,'p_value_list_single','parser.py',470),
  ('const_list_value -> BRACKET_L const_value_list BRACKET_R','const_list_value',3,'p_const_list_value','parser.py',476),
  ('const_list_value -> BRACKET_L BRACKET_R','const_list_value',2,'p_const_list_value','parser.py',477),
  ('const_value_list -> const_value_list const_value','const_value_list',2,'p_const_value_list','parser.py',483),
  ('const_value_list -> const_value','const_value_list',1,'p_const_value_list_single','parser.py',489),
  ('object_value -> BRACE_L object_field_list BRACE_R','object_value',3,'p_object_value','parser.py',495),
  ('object_value -> BRACE_L BRACE_R','object_value',2,'p_object_value','parser.py',496),
  ('object_field_list -> object_field_list object_field','object_field_list',2,'p_object_field_list','parser.py',502),
  ('object_field_list -> object_field','object_field_list',1,'p_object_field_list_single','parser.py',510),
  ('object_field -> name COLON value','object_field',3,'p_object_field','parser.py',516),
  ('const_object_value -> BRACE_L const_object_field_list BRACE_R','const_object_value',3,'p_const_object_value','parser.py',522),
  ('const_object_value -> BRACE_L BRACE_R','const_object_value',2,'p_const_object_value','parser.py',523),
  ('const_object_field_list -> const_object_field_list const_object_field','const_object_field_list',2,'p_const_object_field_list','parser.py',529),
  ('const_object_field_list -> const_object_field','const_object_field_list',1,'p_const_object_field_list_single','parser.py',537),
  ('const_object_field -> name COLON const_value','const_object_field',3,'p_const_object_field','parser.py',543),
  ('type -> named_type','type',1,'p_type','parser.py',549),
  ('type -> list_type','type',1,'p_type','parser.py',550),
  ('type -> non_null_type','type',1,'p_type','parser.py',551),
  ('named_type -> name','named_type',1,'p_named_type','parser.py',557),
  ('list_type -> BRACKET_L type BRACKET_R','list_type',3,'p_list_type','parser.py',563),
  ('non_null_type -> named_type BANG','non_null_type',2,'p_non_null_type','parser.py',569),
  ('non_null_type -> list_type BANG','non_null_type',2,'p_non_null_type','parser.py',570),
]
