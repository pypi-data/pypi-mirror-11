#!/usr/bin/env python

class Worksheet(object):
    """NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually."""


    def __init__(self):
        """
        Attributes:
          swaggerTypes (dict): The key is attribute name and the value is attribute type.
          attributeMap (dict): The key is attribute name and the value is json key in definition.
        """
        self.swaggerTypes = {
            'Links': 'list[Link]',
            'DisplayRightToLeft': 'bool',
            'DisplayZeros': 'bool',
            'FirstVisibleColumn': 'int',
            'FirstVisibleRow': 'int',
            'Name': 'str',
            'Index': 'int',
            'IsGridlinesVisible': 'bool',
            'IsOutlineShown': 'bool',
            'IsPageBreakPreview': 'bool',
            'IsVisible': 'bool',
            'IsProtected': 'bool',
            'IsRowColumnHeadersVisible': 'bool',
            'IsRulerVisible': 'bool',
            'IsSelected': 'bool',
            'TabColor': 'Color',
            'TransitionEntry': 'bool',
            'TransitionEvaluation': 'bool',
            'Type': 'str',
            'ViewType': 'str',
            'VisibilityType': 'str',
            'Zoom': 'int',
            'Cells': 'LinkElement',
            'Charts': 'LinkElement',
            'AutoShapes': 'LinkElement',
            'OleObjects': 'LinkElement',
            'Comments': 'LinkElement',
            'Pictures': 'LinkElement',
            'MergedCells': 'LinkElement',
            'Validations': 'LinkElement',
            'ConditionalFormattings': 'LinkElement',
            'Hyperlinks': 'LinkElement'

        }

        self.attributeMap = {
            'Links': 'Links','DisplayRightToLeft': 'DisplayRightToLeft','DisplayZeros': 'DisplayZeros','FirstVisibleColumn': 'FirstVisibleColumn','FirstVisibleRow': 'FirstVisibleRow','Name': 'Name','Index': 'Index','IsGridlinesVisible': 'IsGridlinesVisible','IsOutlineShown': 'IsOutlineShown','IsPageBreakPreview': 'IsPageBreakPreview','IsVisible': 'IsVisible','IsProtected': 'IsProtected','IsRowColumnHeadersVisible': 'IsRowColumnHeadersVisible','IsRulerVisible': 'IsRulerVisible','IsSelected': 'IsSelected','TabColor': 'TabColor','TransitionEntry': 'TransitionEntry','TransitionEvaluation': 'TransitionEvaluation','Type': 'Type','ViewType': 'ViewType','VisibilityType': 'VisibilityType','Zoom': 'Zoom','Cells': 'Cells','Charts': 'Charts','AutoShapes': 'AutoShapes','OleObjects': 'OleObjects','Comments': 'Comments','Pictures': 'Pictures','MergedCells': 'MergedCells','Validations': 'Validations','ConditionalFormattings': 'ConditionalFormattings','Hyperlinks': 'Hyperlinks'}       

        self.Links = None # list[Link]
        self.DisplayRightToLeft = None # bool
        self.DisplayZeros = None # bool
        self.FirstVisibleColumn = None # int
        self.FirstVisibleRow = None # int
        self.Name = None # str
        self.Index = None # int
        self.IsGridlinesVisible = None # bool
        self.IsOutlineShown = None # bool
        self.IsPageBreakPreview = None # bool
        self.IsVisible = None # bool
        self.IsProtected = None # bool
        self.IsRowColumnHeadersVisible = None # bool
        self.IsRulerVisible = None # bool
        self.IsSelected = None # bool
        self.TabColor = None # Color
        self.TransitionEntry = None # bool
        self.TransitionEvaluation = None # bool
        self.Type = None # str
        self.ViewType = None # str
        self.VisibilityType = None # str
        self.Zoom = None # int
        self.Cells = None # LinkElement
        self.Charts = None # LinkElement
        self.AutoShapes = None # LinkElement
        self.OleObjects = None # LinkElement
        self.Comments = None # LinkElement
        self.Pictures = None # LinkElement
        self.MergedCells = None # LinkElement
        self.Validations = None # LinkElement
        self.ConditionalFormattings = None # LinkElement
        self.Hyperlinks = None # LinkElement
        
