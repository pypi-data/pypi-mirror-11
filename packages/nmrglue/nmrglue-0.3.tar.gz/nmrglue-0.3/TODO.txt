Items to do before article is published
=======================================

1. Update inline documentation on all user functions and classes to match scipy
documentation standards.  DONE

pipe_proc       Done        References to low level function/ better
                            description
proc_base       Done        Additional doc, which functions good for any dim?
proc_bl         Done        Flesh out sol_* functions?

helpers         Done        Better docs?
lineshapes1d    Done        Warnings b/c __init__,  .. math:: for lineshapes?
peakpick        Done        Links to picking algorithms
segmentation    Done        See Alsos?


2. Unit tests for all modules which use nose.  Make data needed for these unit
test available for download.

Module      Unit Test (5 /21)       Notes 
------      -----------------       -----
bruker      Done                    Example data is bruker_data.tar (91 MB) 
convert     Done                    TOO BIG, generate from conversion scripts.  
fileiobase  None Needed             No tests needed      
glue        Skipped                 Not imported          
pipe        Done                    TOO BIG, generate from conversion scripts.
rnmrtk          
sparky      Done                    TOO BIG, generate from conversion scripts.
table       
varian      Done                    Example data is agilent_data.tar (135 MB)

pipe_proc       
proc_base       
proc_bl         
proc_lp         

analysisbase    None Needed         No tests needed    
helpers         
leastsqbound    
lineshapes1d    
linesh          
peakpick        
segmentation    

misc

3. Check over examples, prune, update and add as needed.  Add links to raw 
data.  Add examples of spectral analysis (peak picking, lineshape fitting).
Add T1 measurements and TEDOR fitting?  Linear prediction, peak picking,
fitting and segmentation examples.

4. Rewrite tutorial, include mention of analysis module.

5. Release version 0.3, check installer on Linux, Windows, and OS-X.  Update
install script, grep for XXX in all files and update pyPI record. Record
example data.


To Do and other updates post journal article.
=============================================

Idea list broken down by directory.

global
------
-Use CapCase for classes

nmrglue
-------

    filio
    -----
    - replicate varian namespace as agilent namespace.
    - finish writing, documenting and testing rnmrtk module.
    - lowmemory (in-place) writing of regions of data.
        Use data_nd functionality with put_slice.
    - ability to write slices to file in all modules (ala pipe.write_slice3d)
    - global iter3D object
    - update glue module?
    - sparky_nd object? or dimension agnostic functions?
    - spinev module?
    - simpson module?

    gui? 
    ----
    - gui module with common gui functions?

    process
    ------
    - test and document proc_lp module and lp/lpc/lp2d in pipe_proc module.
    - glue_proc module?
    - debug XXX in pipe_proc
    - more work on broken tests in test_pipe_proc
    - proc_mem module (Maximum Entropy)?
    - add missing functions in pipe_proc
    - FWHT in proc_base
    - profile processing and optimize
    - poly_td and poly_fd in proc_bl.py


Other thoughts
--------------
- Unix like commands (coadd_pipe, unarray_varian, ...)
