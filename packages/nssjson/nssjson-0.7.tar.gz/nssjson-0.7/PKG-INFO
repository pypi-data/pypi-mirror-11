Metadata-Version: 1.1
Name: nssjson
Version: 0.7
Summary: Not So Simple JSON encoder/decoder
Home-page: https://github.com/lelit/nssjson
Author: Lele Gaifax
Author-email: lele@metapensiero.it
License: MIT License
Description: =========
         nssjson
        =========
        
        JSON encoder/decoder for Python
        ===============================
        
        nssjson is a (not so) simple, fast, complete, correct and extensible `JSON <http://json.org>`_
        encoder and decoder for Python 2.5+ and Python 3.3+.  It is pure Python code with no
        dependencies, but includes an optional C extension for a serious speed boost.
        
        nssjson__ is a fork of simplejson__ that fulfills my need of having a good performance JSON
        encoder/decoder able to handle also Python's datetime and UUID, even if with an admittedly
        non-standard and faulty heuristic that was `not considered`__ within the scope of the original
        product.
        
        Practically, the difference is that, out of the box, you have:
        
        .. code-block:: python
        
            >>> import datetime, uuid
            >>> import nssjson
            >>> now = datetime.datetime.now()
            >>> uid = uuid.uuid1()
            >>> nssjson.loads(
            ...     nssjson.dumps([uid, now], iso_datetime=True, handle_uuid=True),
            ...     iso_datetime=True, handle_uuid=True) == [uid, now]
            True
        
        __ https://github.com/lelit/nssjson
        __ https://github.com/simplejson/simplejson
        __ https://github.com/simplejson/simplejson/pull/89
        
        
        Changes
        -------
        
        0.7 (2015-08-07)
        ~~~~~~~~~~~~~~~~
        
        * Optionally serialize/deserialize UUIDs
        
        
        0.6 (2015-05-31)
        ~~~~~~~~~~~~~~~~
        
        * Avoid broken JSON output for int/long/float subclasses reimplementing the __str__()
          and/or __repr__() methods
        
        
        0.5 (2014-12-21)
        ~~~~~~~~~~~~~~~~
        
        * Fix memory leak when an error occurs encoding dict items
        
        * Overhaul of load() and dump() signatures
        
        * Drop Sphinx documentation
        
        
        0.4 (2014-06-28)
        ~~~~~~~~~~~~~~~~
        
        * Complete the fix against negative index parameter to raw_decode()
        
        * Fix C encoder initialization
        
        * Catch invalid item_sort_key argument to C encoder
        
        
        0.3 (2014-04-16)
        ~~~~~~~~~~~~~~~~
        
        * Update version in nssjson/__init__.py at release time
        
        * Catch negative index parameter to the C scan_once() function, mimicking
          http://hg.python.org/cpython/rev/ef52ae167555
        
        
        0.2 (2014-03-22)
        ~~~~~~~~~~~~~~~~
        
        * Remove dead code noticed by Anatoly Techtonik
        
        * Use an interned instance of the UTC timezone instead of passing it as an argument to
          function/constructors
        
        
        0.1 (2014-03-19)
        ~~~~~~~~~~~~~~~~
        
        * Fork of simplejson 3.3.3
        
        * Add support for Python datetimes, dates and times
          (see https://github.com/simplejson/simplejson/issues/86 and
          https://github.com/simplejson/simplejson/pull/89)
        
        * Fix compatibility with Python 3.4 unittests
        
Platform: any
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: License :: OSI Approved :: Academic Free License (AFL)
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: PyPy
Classifier: Topic :: Software Development :: Libraries :: Python Modules
