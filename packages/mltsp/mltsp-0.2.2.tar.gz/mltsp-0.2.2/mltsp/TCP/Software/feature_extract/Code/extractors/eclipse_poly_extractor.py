from ..FeatureExtractor import FeatureExtractor, InterExtractor

import os, sys

class eclipse_poly_extractor(InterExtractor):
        """
Josh's 20110809 eclipsing features code, which characterizes various
aspects of eclipsing timeseries.  Applies a polyfit algorithm which is
not 2nd deriv continuous constrained as the splinefits in Nat's
lombscargle code.

Requires GSL and requires C code compilation of polyfit.c into
polyfit.so for Python bindings.

        """
    #active = False  # TODO probably want False
    internal_use_only = False # if set True, then seems to run all X code for each sub-feature
    active = True # if set False, then seems to run all X code for each sub-feature
    extname = 'eclipse_poly' #extractor's name

    def extract(self):
            """ Note: this is an internal feature which calculates data structures which
            are used by other features.
            """
            lomb_dict = self.fetch_extr('lomb_scargle')

            sys.path.append(os.path.abspath(os.environ.get("TCP_DIR") + \
                                            'Algorithms/EclFeatures'))
            import eclipse_features
            a = eclipse_features.ebfeature(t=self.properties['data'][self.band]['input']['time_data'],
                                           m=self.properties['data'][self.band]['input']['flux_data'],
                                           merr=self.properties['data'][self.band]['input']['rms_data'],
                       srcid=self.properties['data'][self.band]['input']['srcid'],
                                           allow_plotting=False,
                                           fix_initial_period=True,
                                           initial_period=1./lomb_dict['freq1_harmonics_freq_0'])
            a.gen_orbital_period(doplot=False, dynamic=False, eclipse_shorter=True, choose_largest_numf=True)#, dynamic=True)
            a.features['final_period_ratio'] = a.features['p_pulse'] * lomb_dict['freq1_harmonics_freq_0']
            #import pprint
            #pprint.pprint(a.features)
            #import pdb; pdb.set_trace()
            #print
            return a.features



class eclpoly_best_orb_chi2_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_best_orb_chi2' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['best_orb_chi2']
            return val


class eclpoly_best_orb_period_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_best_orb_period' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['best_orb_period']
            return val


class eclpoly_15_ratio_diff_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_15_ratio_diff' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['feature-15-ratio-diff']
            return val


class eclpoly_20_ratio_diff_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_20_ratio_diff' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['feature-20-ratio-diff']
            return val


class eclpoly_30_ratio_diff_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_30_ratio_diff' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['feature-30-ratio-diff']
            return val


class eclpoly_5_ratio_diff_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_5_ratio_diff' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['feature-5-ratio-diff']
            return val


class eclpoly_8_ratio_diff_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_8_ratio_diff' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['feature-8-ratio-diff']
            return val


class eclpoly_is_suspect_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_is_suspect' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['is_suspect']
            return int(val)


class eclpoly_orb_signif_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    """
    active = True
    extname = 'eclpoly_orb_signif' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['orb_signif']
            return val


class eclpoly_p_pulse_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.

    This is essentially freq1, so we disable in __init__.py
    """
    active = True
    extname = 'eclpoly_p_pulse' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['p_pulse']
            return val


class eclpoly_p_pulse_initial_extractor(FeatureExtractor):
    """ A feature generated by jbloom 20110809 eclipsing polyfit eclipse_features.py code.
    This is essentially freq1, so we disable in __init__.py
    """
    active = True
    extname = 'eclpoly_p_pulse_initial' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['p_pulse_initial']
            return val


class eclpoly_final_period_ratio_extractor(FeatureExtractor):
    """ A feature added by dstarr on 20120206: ratio of eclip poly fit final period with LS freq1 period.
    This represents how different the eclipsing period is from freq1, without duplicating a freq1 feature for
    most sources (which would give more power than intended).
    
    """
    active = True
    extname = 'eclpoly_final_period_ratio' #extractor's name
    def extract(self):
            val = self.properties['data'][self.band]['inter']['eclipse_poly'].result['final_period_ratio']
            return val

