Metadata-Version: 1.1
Name: sublimedsl
Version: 0.1.0
Summary: A convenient DSL for generating SublimeText configs.
Home-page: https://github.com/jirutka/sublimedsl
Author: Jakub Jirutka
Author-email: jakub@jirutka.cz
License: MIT
Description: SublimeText DSL
        ===============
        
        |version| |downloads|
        
        TODO
        
        Usage
        -----
        
        Examples
        ~~~~~~~~
        
        .. code:: python
        
            #!/usr/bin/env python3
            from sublimedsl.keymap import *
        
            Keymap(
                bind('backspace')
                    .to('run_macro_file', file='res://Packages/Default/Delete Left Right.sublime-macro')
                    .when('setting.auto_match_enabled').any().true()
                    .also('preceding_text').regex_contains(r'_$')
                    .also('following_text').regex_contains(r'^_'),
        
                bind('super+k', 'super+shift+up')
                    .to('new_pane', move=False),
        
                common_context=[
                    context('selector').equal('text.asciidoc')
                ],
                default_match_all=True
        
            ).dump('Default')
        
        This above code will produce file ``Default.sublime-keymap`` with:
        
        .. code:: json
        
            [
              {
                "keys": [ "backspace" ],
                "command": "run_macro_file",
                "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
                "context": [
                  { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true, "match_all": false },
                  { "key": "preceding_text", "operator": "regex_contains", "operand": "_$", "match_all": true },
                  { "key": "following_text", "operator": "regex_contains", "operand": "^_", "match_all": true },
                  { "key": "selector", "operator": "equal", "operand": "text.asciidoc", "match_all": true }
                ]
              },
              {
                "keys": [ "super+k", "super+shift+up" ],
                "command": "new_pane",
                "args": { "move": false },
                "context": [
                  { "key": "selector", "operator": "equal", "operand": "text.asciidoc", "match_all": true }
                ]
              }
            ]
        
        Installation
        ------------
        
        System-wide
        ~~~~~~~~~~~
        
        Install from PyPI system-wide:
        
        ::
        
            sudo pip install sublimedsl
        
        …or manually:
        
        ::
        
            git clone git@github.com:jirutka/sublimedsl.git
            cd sublimedsl
            sudo ./setup.py install
        
        Locally
        ~~~~~~~
        
        If you don’t have a root access to the system, or just don’t want to
        install sublimedsl system-wide, then you can tell ``pip`` or
        ``setup.py`` to install it into your home directory (namely
        ``~/.local``):
        
        ::
        
            pip install --user sublimedsl
        
        …or manually:
        
        ::
        
            git clone git@github.com:jirutka/sublimedsl.git
            cd sublimedsl
            ./setup.py --user install
        
        License
        -------
        
        This project is licensed under `MIT
        license <http://opensource.org/licenses/MIT>`__.
        
        .. |version| image:: https://badge.fury.io/py/sublimedsl.svg
           :target: https://pypi.python.org/pypi/sublimedsl
        .. |downloads| image:: https://pypip.in/d/sublimedsl/badge.svg
           :target: https://pypi.python.org/pypi/sublimedsl
        
Platform: UNKNOWN
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Utilities
