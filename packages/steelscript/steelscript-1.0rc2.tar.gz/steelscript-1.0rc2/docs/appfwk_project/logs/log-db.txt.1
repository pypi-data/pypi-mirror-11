2014-06-26 19:21:18,624 [DEBUG] django.db.backends: (0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
2014-06-26 19:21:18,650 [DEBUG] django.db.backends: (0.024) CREATE TABLE "auth_permission" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(50) NOT NULL,
    "content_type_id" integer NOT NULL,
    "codename" varchar(100) NOT NULL,
    UNIQUE ("content_type_id", "codename")
)
;; args=()
2014-06-26 19:21:18,652 [DEBUG] django.db.backends: (0.002) CREATE TABLE "auth_group_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "group_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("group_id", "permission_id")
)
;; args=()
2014-06-26 19:21:18,654 [DEBUG] django.db.backends: (0.002) CREATE TABLE "auth_group" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(80) NOT NULL UNIQUE
)
;; args=()
2014-06-26 19:21:18,659 [DEBUG] django.db.backends: (0.004) CREATE TABLE "django_content_type" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(100) NOT NULL,
    "app_label" varchar(100) NOT NULL,
    "model" varchar(100) NOT NULL,
    UNIQUE ("app_label", "model")
)
;; args=()
2014-06-26 19:21:18,662 [DEBUG] django.db.backends: (0.002) CREATE TABLE "django_session" (
    "session_key" varchar(40) NOT NULL PRIMARY KEY,
    "session_data" text NOT NULL,
    "expire_date" datetime NOT NULL
)
;; args=()
2014-06-26 19:21:18,664 [DEBUG] django.db.backends: (0.001) CREATE TABLE "admin_tools_menu_bookmark" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "url" varchar(255) NOT NULL,
    "title" varchar(255) NOT NULL
)
;; args=()
2014-06-26 19:21:18,694 [DEBUG] django.db.backends: (0.030) CREATE TABLE "admin_tools_dashboard_preferences" (
    "id" integer NOT NULL PRIMARY KEY,
    "user_id" integer NOT NULL,
    "data" text NOT NULL,
    "dashboard_id" varchar(100) NOT NULL,
    UNIQUE ("user_id", "dashboard_id")
)
;; args=()
2014-06-26 19:21:18,697 [DEBUG] django.db.backends: (0.002) CREATE TABLE "django_admin_log" (
    "id" integer NOT NULL PRIMARY KEY,
    "action_time" datetime NOT NULL,
    "user_id" integer NOT NULL,
    "content_type_id" integer REFERENCES "django_content_type" ("id"),
    "object_id" text,
    "object_repr" varchar(200) NOT NULL,
    "action_flag" smallint unsigned NOT NULL,
    "change_message" text NOT NULL
)
;; args=()
2014-06-26 19:21:18,820 [DEBUG] django.db.backends: (0.122) CREATE TABLE "datasource_tablefield" (
    "id" integer NOT NULL PRIMARY KEY,
    "keyword" varchar(100) NOT NULL,
    "label" varchar(100),
    "help_text" varchar(400),
    "initial" text,
    "required" bool NOT NULL,
    "hidden" bool NOT NULL,
    "field_cls" text,
    "field_kwargs" text,
    "parent_keywords" text,
    "pre_process_func" text,
    "dynamic" bool NOT NULL,
    "post_process_func" text,
    "post_process_template" varchar(500)
)
;; args=()
2014-06-26 19:21:18,839 [DEBUG] django.db.backends: (0.019) CREATE TABLE "datasource_table_fields" (
    "id" integer NOT NULL PRIMARY KEY,
    "table_id" integer NOT NULL,
    "tablefield_id" integer NOT NULL REFERENCES "datasource_tablefield" ("id"),
    UNIQUE ("table_id", "tablefield_id")
)
;; args=()
2014-06-26 19:21:18,855 [DEBUG] django.db.backends: (0.015) CREATE TABLE "datasource_table" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(200) NOT NULL,
    "module" varchar(200) NOT NULL,
    "queryclass" varchar(200) NOT NULL,
    "datasource" varchar(200) NOT NULL,
    "namespace" varchar(100) NOT NULL,
    "sourcefile" varchar(200) NOT NULL,
    "sortcols" text,
    "sortdir" text,
    "rows" integer NOT NULL,
    "filterexpr" varchar(400),
    "resample" bool NOT NULL,
    "options" text,
    "criteria" text,
    "criteria_handle_func" text,
    "cacheable" bool NOT NULL
)
;; args=()
2014-06-26 19:21:18,862 [DEBUG] django.db.backends: (0.006) CREATE TABLE "datasource_column" (
    "id" integer NOT NULL PRIMARY KEY,
    "table_id" integer NOT NULL REFERENCES "datasource_table" ("id"),
    "name" varchar(300) NOT NULL,
    "label" varchar(300),
    "position" decimal NOT NULL,
    "options" text,
    "iskey" bool NOT NULL,
    "synthetic" bool NOT NULL,
    "ephemeral_id" integer,
    "compute_post_resample" bool NOT NULL,
    "compute_expression" varchar(300) NOT NULL,
    "resample_operation" varchar(300) NOT NULL,
    "datatype" integer NOT NULL,
    "units" integer NOT NULL
)
;; args=()
2014-06-26 19:21:18,866 [DEBUG] django.db.backends: (0.003) CREATE TABLE "datasource_job" (
    "id" integer NOT NULL PRIMARY KEY,
    "created" datetime NOT NULL,
    "touched" datetime NOT NULL,
    "refcount" integer NOT NULL,
    "ischild" bool NOT NULL,
    "parent_id" integer,
    "table_id" integer NOT NULL REFERENCES "datasource_table" ("id"),
    "criteria" text,
    "actual_criteria" text,
    "handle" varchar(100) NOT NULL,
    "status" integer NOT NULL,
    "message" text NOT NULL,
    "progress" integer NOT NULL,
    "remaining" integer
)
;; args=()
2014-06-26 19:21:18,874 [DEBUG] django.db.backends: (0.007) CREATE TABLE "devices_device" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(200) NOT NULL,
    "module" varchar(200) NOT NULL,
    "host" varchar(200) NOT NULL,
    "port" integer NOT NULL,
    "username" varchar(100) NOT NULL,
    "password" varchar(100) NOT NULL,
    "enabled" bool NOT NULL
)
;; args=()
2014-06-26 19:21:18,878 [DEBUG] django.db.backends: (0.003) CREATE TABLE "report_report_fields" (
    "id" integer NOT NULL PRIMARY KEY,
    "report_id" integer NOT NULL,
    "tablefield_id" integer NOT NULL REFERENCES "datasource_tablefield" ("id"),
    UNIQUE ("report_id", "tablefield_id")
)
;; args=()
2014-06-26 19:21:18,881 [DEBUG] django.db.backends: (0.002) CREATE TABLE "report_report" (
    "id" integer NOT NULL PRIMARY KEY,
    "title" varchar(200) NOT NULL,
    "position" decimal NOT NULL,
    "enabled" bool NOT NULL,
    "slug" varchar(50) NOT NULL UNIQUE,
    "namespace" varchar(100) NOT NULL,
    "sourcefile" varchar(200) NOT NULL,
    "filepath" varchar(100) NOT NULL,
    "field_order" text,
    "hidden_fields" text,
    "hide_criteria" bool NOT NULL,
    "reload_minutes" integer NOT NULL
)
;; args=()
2014-06-26 19:21:18,884 [DEBUG] django.db.backends: (0.002) CREATE TABLE "report_section_fields" (
    "id" integer NOT NULL PRIMARY KEY,
    "section_id" integer NOT NULL,
    "tablefield_id" integer NOT NULL REFERENCES "datasource_tablefield" ("id"),
    UNIQUE ("section_id", "tablefield_id")
)
;; args=()
2014-06-26 19:21:18,893 [DEBUG] django.db.backends: (0.009) CREATE TABLE "report_section" (
    "id" integer NOT NULL PRIMARY KEY,
    "report_id" integer NOT NULL REFERENCES "report_report" ("id"),
    "title" varchar(200) NOT NULL,
    "position" decimal NOT NULL
)
;; args=()
2014-06-26 19:21:18,901 [DEBUG] django.db.backends: (0.008) CREATE TABLE "report_sectionfieldmode" (
    "id" integer NOT NULL PRIMARY KEY,
    "section_id" integer NOT NULL REFERENCES "report_section" ("id"),
    "keyword" varchar(200) NOT NULL,
    "mode" integer NOT NULL
)
;; args=()
2014-06-26 19:21:18,906 [DEBUG] django.db.backends: (0.004) CREATE TABLE "report_widget_tables" (
    "id" integer NOT NULL PRIMARY KEY,
    "widget_id" integer NOT NULL,
    "table_id" integer NOT NULL REFERENCES "datasource_table" ("id"),
    UNIQUE ("widget_id", "table_id")
)
;; args=()
2014-06-26 19:21:18,909 [DEBUG] django.db.backends: (0.002) CREATE TABLE "report_widget" (
    "id" integer NOT NULL PRIMARY KEY,
    "section_id" integer NOT NULL REFERENCES "report_section" ("id"),
    "title" varchar(100) NOT NULL,
    "row" integer NOT NULL,
    "col" integer NOT NULL,
    "width" integer NOT NULL,
    "height" integer NOT NULL,
    "rows" integer NOT NULL,
    "options" text,
    "module" varchar(100) NOT NULL,
    "uiwidget" varchar(100) NOT NULL,
    "uioptions" text
)
;; args=()
2014-06-26 19:21:18,911 [DEBUG] django.db.backends: (0.002) CREATE TABLE "report_widgetjob" (
    "id" integer NOT NULL PRIMARY KEY,
    "widget_id" integer NOT NULL REFERENCES "report_widget" ("id"),
    "job_id" integer NOT NULL REFERENCES "datasource_job" ("id")
)
;; args=()
2014-06-26 19:21:18,913 [DEBUG] django.db.backends: (0.002) CREATE TABLE "geolocation_location" (
    "id" integer NOT NULL PRIMARY KEY,
    "name" varchar(200) NOT NULL,
    "latitude" real NOT NULL,
    "longitude" real NOT NULL
)
;; args=()
2014-06-26 19:21:18,919 [DEBUG] django.db.backends: (0.005) CREATE TABLE "geolocation_locationip" (
    "id" integer NOT NULL PRIMARY KEY,
    "location_id" integer NOT NULL REFERENCES "geolocation_location" ("id"),
    "address" char(15) NOT NULL,
    "mask" char(15) NOT NULL
)
;; args=()
2014-06-26 19:21:18,921 [DEBUG] django.db.backends: (0.002) CREATE TABLE "preferences_portaluser_groups" (
    "id" integer NOT NULL PRIMARY KEY,
    "portaluser_id" integer NOT NULL,
    "group_id" integer NOT NULL REFERENCES "auth_group" ("id"),
    UNIQUE ("portaluser_id", "group_id")
)
;; args=()
2014-06-26 19:21:18,924 [DEBUG] django.db.backends: (0.003) CREATE TABLE "preferences_portaluser_user_permissions" (
    "id" integer NOT NULL PRIMARY KEY,
    "portaluser_id" integer NOT NULL,
    "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id"),
    UNIQUE ("portaluser_id", "permission_id")
)
;; args=()
2014-06-26 19:21:18,926 [DEBUG] django.db.backends: (0.002) CREATE TABLE "preferences_portaluser" (
    "id" integer NOT NULL PRIMARY KEY,
    "password" varchar(128) NOT NULL,
    "last_login" datetime NOT NULL,
    "is_superuser" bool NOT NULL,
    "username" varchar(30) NOT NULL UNIQUE,
    "first_name" varchar(30) NOT NULL,
    "last_name" varchar(30) NOT NULL,
    "email" varchar(75) NOT NULL,
    "is_staff" bool NOT NULL,
    "is_active" bool NOT NULL,
    "date_joined" datetime NOT NULL,
    "timezone" varchar(50) NOT NULL,
    "timezone_changed" bool NOT NULL,
    "profile_seen" bool NOT NULL
)
;; args=()
2014-06-26 19:21:18,930 [DEBUG] django.db.backends: (0.003) CREATE TABLE "preferences_systemsettings" (
    "id" integer NOT NULL PRIMARY KEY,
    "ignore_cache" bool NOT NULL,
    "developer" bool NOT NULL,
    "maps_version" varchar(30) NOT NULL,
    "maps_api_key" varchar(100)
)
;; args=()
2014-06-26 19:21:18,954 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', u'auth')
2014-06-26 19:21:18,954 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (permission, auth, permission); args=[u'permission', u'auth', 'permission']
2014-06-26 19:21:18,960 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', u'auth')
2014-06-26 19:21:18,960 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (group, auth, group); args=[u'group', u'auth', 'group']
2014-06-26 19:21:18,965 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2)
2014-06-26 19:21:18,966 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add permission AS "name", 1 AS "content_type_id", add_permission AS "codename" UNION ALL SELECT Can change permission, 1, change_permission UNION ALL SELECT Can delete permission, 1, delete_permission UNION ALL SELECT Can add group, 2, add_group UNION ALL SELECT Can change group, 2, change_group UNION ALL SELECT Can delete group, 2, delete_group; args=(u'Can add permission', 1, u'add_permission', u'Can change permission', 1, u'change_permission', u'Can delete permission', 1, u'delete_permission', u'Can add group', 2, u'add_group', u'Can change group', 2, u'change_group', u'Can delete group', 2, u'delete_group')
2014-06-26 19:21:18,973 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = auth  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2014-06-26 19:21:18,975 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = contenttype  AND "django_content_type"."app_label" = contenttypes ); args=('contenttype', u'contenttypes')
2014-06-26 19:21:18,975 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (content type, contenttypes, contenttype); args=[u'content type', u'contenttypes', 'contenttype']
2014-06-26 19:21:18,984 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(3,)
2014-06-26 19:21:18,985 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add content type AS "name", 3 AS "content_type_id", add_contenttype AS "codename" UNION ALL SELECT Can change content type, 3, change_contenttype UNION ALL SELECT Can delete content type, 3, delete_contenttype; args=(u'Can add content type', 3, u'add_contenttype', u'Can change content type', 3, u'change_contenttype', u'Can delete content type', 3, u'delete_contenttype')
2014-06-26 19:21:18,993 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = contenttypes  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2014-06-26 19:21:18,994 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = session  AND "django_content_type"."app_label" = sessions ); args=('session', u'sessions')
2014-06-26 19:21:18,995 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (session, sessions, session); args=[u'session', u'sessions', 'session']
2014-06-26 19:21:19,003 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2014-06-26 19:21:19,004 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add session AS "name", 4 AS "content_type_id", add_session AS "codename" UNION ALL SELECT Can change session, 4, change_session UNION ALL SELECT Can delete session, 4, delete_session; args=(u'Can add session', 4, u'add_session', u'Can change session', 4, u'change_session', u'Can delete session', 4, u'delete_session')
2014-06-26 19:21:19,007 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = sessions  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2014-06-26 19:21:19,011 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = bookmark  AND "django_content_type"."app_label" = menu ); args=('bookmark', u'menu')
2014-06-26 19:21:19,012 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (bookmark, menu, bookmark); args=[u'bookmark', u'menu', 'bookmark']
2014-06-26 19:21:19,015 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2014-06-26 19:21:19,016 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add bookmark AS "name", 5 AS "content_type_id", add_bookmark AS "codename" UNION ALL SELECT Can change bookmark, 5, change_bookmark UNION ALL SELECT Can delete bookmark, 5, delete_bookmark; args=(u'Can add bookmark', 5, u'add_bookmark', u'Can change bookmark', 5, u'change_bookmark', u'Can delete bookmark', 5, u'delete_bookmark')
2014-06-26 19:21:19,018 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = menu  ORDER BY "django_content_type"."name" ASC; args=(u'menu',)
2014-06-26 19:21:19,019 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = dashboardpreferences  AND "django_content_type"."app_label" = dashboard ); args=('dashboardpreferences', u'dashboard')
2014-06-26 19:21:19,019 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (dashboard preferences, dashboard, dashboardpreferences); args=[u'dashboard preferences', u'dashboard', 'dashboardpreferences']
2014-06-26 19:21:19,023 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2014-06-26 19:21:19,023 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add dashboard preferences AS "name", 6 AS "content_type_id", add_dashboardpreferences AS "codename" UNION ALL SELECT Can change dashboard preferences, 6, change_dashboardpreferences UNION ALL SELECT Can delete dashboard preferences, 6, delete_dashboardpreferences; args=(u'Can add dashboard preferences', 6, u'add_dashboardpreferences', u'Can change dashboard preferences', 6, u'change_dashboardpreferences', u'Can delete dashboard preferences', 6, u'delete_dashboardpreferences')
2014-06-26 19:21:19,028 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = dashboard  ORDER BY "django_content_type"."name" ASC; args=(u'dashboard',)
2014-06-26 19:21:19,029 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = logentry  AND "django_content_type"."app_label" = admin ); args=('logentry', u'admin')
2014-06-26 19:21:19,030 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (log entry, admin, logentry); args=[u'log entry', u'admin', 'logentry']
2014-06-26 19:21:19,035 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2014-06-26 19:21:19,035 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add log entry AS "name", 7 AS "content_type_id", add_logentry AS "codename" UNION ALL SELECT Can change log entry, 7, change_logentry UNION ALL SELECT Can delete log entry, 7, delete_logentry; args=(u'Can add log entry', 7, u'add_logentry', u'Can change log entry', 7, u'change_logentry', u'Can delete log entry', 7, u'delete_logentry')
2014-06-26 19:21:19,038 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = admin  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2014-06-26 19:21:19,041 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = tablefield  AND "django_content_type"."app_label" = datasource ); args=('tablefield', u'datasource')
2014-06-26 19:21:19,042 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (table field, datasource, tablefield); args=[u'table field', u'datasource', 'tablefield']
2014-06-26 19:21:19,045 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = table  AND "django_content_type"."app_label" = datasource ); args=('table', u'datasource')
2014-06-26 19:21:19,046 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (table, datasource, table); args=[u'table', u'datasource', 'table']
2014-06-26 19:21:19,049 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = column  AND "django_content_type"."app_label" = datasource ); args=('column', u'datasource')
2014-06-26 19:21:19,049 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (column, datasource, column); args=[u'column', u'datasource', 'column']
2014-06-26 19:21:19,054 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = job  AND "django_content_type"."app_label" = datasource ); args=('job', u'datasource')
2014-06-26 19:21:19,054 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (job, datasource, job); args=[u'job', u'datasource', 'job']
2014-06-26 19:21:19,058 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11)
2014-06-26 19:21:19,060 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add table field AS "name", 8 AS "content_type_id", add_tablefield AS "codename" UNION ALL SELECT Can change table field, 8, change_tablefield UNION ALL SELECT Can delete table field, 8, delete_tablefield UNION ALL SELECT Can add table, 9, add_table UNION ALL SELECT Can change table, 9, change_table UNION ALL SELECT Can delete table, 9, delete_table UNION ALL SELECT Can add datasource table, 9, add_datasourcetable UNION ALL SELECT Can change datasource table, 9, change_datasourcetable UNION ALL SELECT Can delete datasource table, 9, delete_datasourcetable UNION ALL SELECT Can add column, 10, add_column UNION ALL SELECT Can change column, 10, change_column UNION ALL SELECT Can delete column, 10, delete_column UNION ALL SELECT Can add job, 11, add_job UNION ALL SELECT Can change job, 11, change_job UNION ALL SELECT Can delete job, 11, delete_job; args=(u'Can add table field', 8, u'add_tablefield', u'Can change table field', 8, u'change_tablefield', u'Can delete table field', 8, u'delete_tablefield', u'Can add table', 9, u'add_table', u'Can change table', 9, u'change_table', u'Can delete table', 9, u'delete_table', u'Can add datasource table', 9, u'add_datasourcetable', u'Can change datasource table', 9, u'change_datasourcetable', u'Can delete datasource table', 9, u'delete_datasourcetable', u'Can add column', 10, u'add_column', u'Can change column', 10, u'change_column', u'Can delete column', 10, u'delete_column', u'Can add job', 11, u'add_job', u'Can change job', 11, u'change_job', u'Can delete job', 11, u'delete_job')
2014-06-26 19:21:19,062 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = datasource  ORDER BY "django_content_type"."name" ASC; args=(u'datasource',)
2014-06-26 19:21:19,063 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") SELECT datasource table AS "name", datasource AS "app_label", datasourcetable AS "model"; args=(u'datasource table', u'datasource', 'datasourcetable')
2014-06-26 19:21:19,066 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = device  AND "django_content_type"."app_label" = devices ); args=('device', u'devices')
2014-06-26 19:21:19,066 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (device, devices, device); args=[u'device', u'devices', 'device']
2014-06-26 19:21:19,070 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (13) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(13,)
2014-06-26 19:21:19,071 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add device AS "name", 13 AS "content_type_id", add_device AS "codename" UNION ALL SELECT Can change device, 13, change_device UNION ALL SELECT Can delete device, 13, delete_device; args=(u'Can add device', 13, u'add_device', u'Can change device', 13, u'change_device', u'Can delete device', 13, u'delete_device')
2014-06-26 19:21:19,074 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = devices  ORDER BY "django_content_type"."name" ASC; args=(u'devices',)
2014-06-26 19:21:19,076 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = report  AND "django_content_type"."app_label" = report ); args=('report', u'report')
2014-06-26 19:21:19,076 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (report, report, report); args=[u'report', u'report', 'report']
2014-06-26 19:21:19,080 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = section  AND "django_content_type"."app_label" = report ); args=('section', u'report')
2014-06-26 19:21:19,080 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (section, report, section); args=[u'section', u'report', 'section']
2014-06-26 19:21:19,084 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = sectionfieldmode  AND "django_content_type"."app_label" = report ); args=('sectionfieldmode', u'report')
2014-06-26 19:21:19,085 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (section field mode, report, sectionfieldmode); args=[u'section field mode', u'report', 'sectionfieldmode']
2014-06-26 19:21:19,089 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = widget  AND "django_content_type"."app_label" = report ); args=('widget', u'report')
2014-06-26 19:21:19,090 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (widget, report, widget); args=[u'widget', u'report', 'widget']
2014-06-26 19:21:19,092 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = widgetjob  AND "django_content_type"."app_label" = report ); args=('widgetjob', u'report')
2014-06-26 19:21:19,093 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (widget job, report, widgetjob); args=[u'widget job', u'report', 'widgetjob']
2014-06-26 19:21:19,096 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (16, 17, 18, 14, 15) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(16, 17, 18, 14, 15)
2014-06-26 19:21:19,097 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add report AS "name", 14 AS "content_type_id", add_report AS "codename" UNION ALL SELECT Can change report, 14, change_report UNION ALL SELECT Can delete report, 14, delete_report UNION ALL SELECT Can add section, 15, add_section UNION ALL SELECT Can change section, 15, change_section UNION ALL SELECT Can delete section, 15, delete_section UNION ALL SELECT Can add section field mode, 16, add_sectionfieldmode UNION ALL SELECT Can change section field mode, 16, change_sectionfieldmode UNION ALL SELECT Can delete section field mode, 16, delete_sectionfieldmode UNION ALL SELECT Can add widget, 17, add_widget UNION ALL SELECT Can change widget, 17, change_widget UNION ALL SELECT Can delete widget, 17, delete_widget UNION ALL SELECT Can add widget job, 18, add_widgetjob UNION ALL SELECT Can change widget job, 18, change_widgetjob UNION ALL SELECT Can delete widget job, 18, delete_widgetjob; args=(u'Can add report', 14, u'add_report', u'Can change report', 14, u'change_report', u'Can delete report', 14, u'delete_report', u'Can add section', 15, u'add_section', u'Can change section', 15, u'change_section', u'Can delete section', 15, u'delete_section', u'Can add section field mode', 16, u'add_sectionfieldmode', u'Can change section field mode', 16, u'change_sectionfieldmode', u'Can delete section field mode', 16, u'delete_sectionfieldmode', u'Can add widget', 17, u'add_widget', u'Can change widget', 17, u'change_widget', u'Can delete widget', 17, u'delete_widget', u'Can add widget job', 18, u'add_widgetjob', u'Can change widget job', 18, u'change_widgetjob', u'Can delete widget job', 18, u'delete_widgetjob')
2014-06-26 19:21:19,100 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = report  ORDER BY "django_content_type"."name" ASC; args=(u'report',)
2014-06-26 19:21:19,101 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = location  AND "django_content_type"."app_label" = geolocation ); args=('location', u'geolocation')
2014-06-26 19:21:19,101 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (location, geolocation, location); args=[u'location', u'geolocation', 'location']
2014-06-26 19:21:19,107 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = locationip  AND "django_content_type"."app_label" = geolocation ); args=('locationip', u'geolocation')
2014-06-26 19:21:19,107 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (location ip, geolocation, locationip); args=[u'location ip', u'geolocation', 'locationip']
2014-06-26 19:21:19,111 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (19, 20) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(19, 20)
2014-06-26 19:21:19,112 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add location AS "name", 19 AS "content_type_id", add_location AS "codename" UNION ALL SELECT Can change location, 19, change_location UNION ALL SELECT Can delete location, 19, delete_location UNION ALL SELECT Can add location ip, 20, add_locationip UNION ALL SELECT Can change location ip, 20, change_locationip UNION ALL SELECT Can delete location ip, 20, delete_locationip; args=(u'Can add location', 19, u'add_location', u'Can change location', 19, u'change_location', u'Can delete location', 19, u'delete_location', u'Can add location ip', 20, u'add_locationip', u'Can change location ip', 20, u'change_locationip', u'Can delete location ip', 20, u'delete_locationip')
2014-06-26 19:21:19,117 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = geolocation  ORDER BY "django_content_type"."name" ASC; args=(u'geolocation',)
2014-06-26 19:21:19,118 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = portaluser  AND "django_content_type"."app_label" = preferences ); args=('portaluser', u'preferences')
2014-06-26 19:21:19,119 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (user, preferences, portaluser); args=[u'user', u'preferences', 'portaluser']
2014-06-26 19:21:19,125 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = systemsettings  AND "django_content_type"."app_label" = preferences ); args=('systemsettings', u'preferences')
2014-06-26 19:21:19,126 [DEBUG] django.db.backends: (0.000) INSERT INTO "django_content_type" ("name", "app_label", "model") VALUES (system settings, preferences, systemsettings); args=[u'system settings', u'preferences', 'systemsettings']
2014-06-26 19:21:19,131 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (21, 22) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(21, 22)
2014-06-26 19:21:19,131 [DEBUG] django.db.backends: (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") SELECT Can add user AS "name", 21 AS "content_type_id", add_portaluser AS "codename" UNION ALL SELECT Can change user, 21, change_portaluser UNION ALL SELECT Can delete user, 21, delete_portaluser UNION ALL SELECT Can add system settings, 22, add_systemsettings UNION ALL SELECT Can change system settings, 22, change_systemsettings UNION ALL SELECT Can delete system settings, 22, delete_systemsettings; args=(u'Can add user', 21, u'add_portaluser', u'Can change user', 21, u'change_portaluser', u'Can delete user', 21, u'delete_portaluser', u'Can add system settings', 22, u'add_systemsettings', u'Can change system settings', 22, u'change_systemsettings', u'Can delete system settings', 22, u'delete_systemsettings')
2014-06-26 19:21:19,135 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = preferences  ORDER BY "django_content_type"."name" ASC; args=(u'preferences',)
2014-06-26 19:21:19,174 [DEBUG] django.db.backends: (0.006) CREATE INDEX "auth_permission_37ef4eb4" ON "auth_permission" ("content_type_id");; args=()
2014-06-26 19:21:19,178 [DEBUG] django.db.backends: (0.004) CREATE INDEX "auth_group_permissions_5f412f9a" ON "auth_group_permissions" ("group_id");; args=()
2014-06-26 19:21:19,181 [DEBUG] django.db.backends: (0.003) CREATE INDEX "auth_group_permissions_83d7f98b" ON "auth_group_permissions" ("permission_id");; args=()
2014-06-26 19:21:19,184 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_session_b7b81f0c" ON "django_session" ("expire_date");; args=()
2014-06-26 19:21:19,187 [DEBUG] django.db.backends: (0.003) CREATE INDEX "admin_tools_menu_bookmark_6340c63c" ON "admin_tools_menu_bookmark" ("user_id");; args=()
2014-06-26 19:21:19,194 [DEBUG] django.db.backends: (0.006) CREATE INDEX "admin_tools_dashboard_preferences_6340c63c" ON "admin_tools_dashboard_preferences" ("user_id");; args=()
2014-06-26 19:21:19,197 [DEBUG] django.db.backends: (0.003) CREATE INDEX "django_admin_log_6340c63c" ON "django_admin_log" ("user_id");; args=()
2014-06-26 19:21:19,199 [DEBUG] django.db.backends: (0.002) CREATE INDEX "django_admin_log_37ef4eb4" ON "django_admin_log" ("content_type_id");; args=()
2014-06-26 19:21:19,202 [DEBUG] django.db.backends: (0.002) CREATE INDEX "datasource_table_fields_80be7a7a" ON "datasource_table_fields" ("table_id");; args=()
2014-06-26 19:21:19,204 [DEBUG] django.db.backends: (0.002) CREATE INDEX "datasource_table_fields_1dbab651" ON "datasource_table_fields" ("tablefield_id");; args=()
2014-06-26 19:21:19,208 [DEBUG] django.db.backends: (0.003) CREATE INDEX "datasource_column_80be7a7a" ON "datasource_column" ("table_id");; args=()
2014-06-26 19:21:19,550 [DEBUG] django.db.backends: (0.342) CREATE INDEX "datasource_column_8ec080e5" ON "datasource_column" ("ephemeral_id");; args=()
2014-06-26 19:21:19,552 [DEBUG] django.db.backends: (0.001) CREATE INDEX "datasource_job_410d0aac" ON "datasource_job" ("parent_id");; args=()
2014-06-26 19:21:19,554 [DEBUG] django.db.backends: (0.002) CREATE INDEX "datasource_job_80be7a7a" ON "datasource_job" ("table_id");; args=()
2014-06-26 19:21:19,571 [DEBUG] django.db.backends: (0.016) CREATE INDEX "report_report_fields_ae85b46e" ON "report_report_fields" ("report_id");; args=()
2014-06-26 19:21:19,573 [DEBUG] django.db.backends: (0.002) CREATE INDEX "report_report_fields_1dbab651" ON "report_report_fields" ("tablefield_id");; args=()
2014-06-26 19:21:19,577 [DEBUG] django.db.backends: (0.003) CREATE INDEX "report_section_fields_b402b60b" ON "report_section_fields" ("section_id");; args=()
2014-06-26 19:21:19,580 [DEBUG] django.db.backends: (0.003) CREATE INDEX "report_section_fields_1dbab651" ON "report_section_fields" ("tablefield_id");; args=()
2014-06-26 19:21:19,583 [DEBUG] django.db.backends: (0.003) CREATE INDEX "report_section_ae85b46e" ON "report_section" ("report_id");; args=()
2014-06-26 19:21:19,586 [DEBUG] django.db.backends: (0.002) CREATE INDEX "report_sectionfieldmode_b402b60b" ON "report_sectionfieldmode" ("section_id");; args=()
2014-06-26 19:21:19,588 [DEBUG] django.db.backends: (0.002) CREATE INDEX "report_widget_tables_fa9c8217" ON "report_widget_tables" ("widget_id");; args=()
2014-06-26 19:21:19,590 [DEBUG] django.db.backends: (0.001) CREATE INDEX "report_widget_tables_80be7a7a" ON "report_widget_tables" ("table_id");; args=()
2014-06-26 19:21:19,592 [DEBUG] django.db.backends: (0.002) CREATE INDEX "report_widget_b402b60b" ON "report_widget" ("section_id");; args=()
2014-06-26 19:21:19,594 [DEBUG] django.db.backends: (0.002) CREATE INDEX "report_widgetjob_fa9c8217" ON "report_widgetjob" ("widget_id");; args=()
2014-06-26 19:21:19,599 [DEBUG] django.db.backends: (0.004) CREATE INDEX "report_widgetjob_218f3960" ON "report_widgetjob" ("job_id");; args=()
2014-06-26 19:21:19,601 [DEBUG] django.db.backends: (0.002) CREATE INDEX "geolocation_locationip_afbb987d" ON "geolocation_locationip" ("location_id");; args=()
2014-06-26 19:21:19,603 [DEBUG] django.db.backends: (0.002) CREATE INDEX "preferences_portaluser_groups_7f53b992" ON "preferences_portaluser_groups" ("portaluser_id");; args=()
2014-06-26 19:21:19,605 [DEBUG] django.db.backends: (0.002) CREATE INDEX "preferences_portaluser_groups_5f412f9a" ON "preferences_portaluser_groups" ("group_id");; args=()
2014-06-26 19:21:19,607 [DEBUG] django.db.backends: (0.001) CREATE INDEX "preferences_portaluser_user_permissions_7f53b992" ON "preferences_portaluser_user_permissions" ("portaluser_id");; args=()
2014-06-26 19:21:19,609 [DEBUG] django.db.backends: (0.002) CREATE INDEX "preferences_portaluser_user_permissions_83d7f98b" ON "preferences_portaluser_user_permissions" ("permission_id");; args=()
2014-06-26 19:21:20,036 [DEBUG] django.db.backends: (0.001) SELECT (1) AS "a" FROM "preferences_portaluser" WHERE "preferences_portaluser"."id" = 1  LIMIT 1; args=(1,)
2014-06-26 19:21:20,037 [DEBUG] django.db.backends: (0.000) INSERT INTO "preferences_portaluser" ("id", "password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined", "timezone", "timezone_changed", "profile_seen") SELECT 1 AS "id", pbkdf2_sha256$10000$DRfFnvmvOCxY$DRVJBUbUPYYP8k6JQiqkTk1UYwCNOWRhkd6tE9b7FlQ= AS "password", 2014-04-15 19:35:41.909000 AS "last_login", True AS "is_superuser", admin AS "username",  AS "first_name",  AS "last_name", admin@test.com AS "email", True AS "is_staff", True AS "is_active", 2014-04-15 19:19:49.027000 AS "date_joined", US/Eastern AS "timezone", False AS "timezone_changed", True AS "profile_seen"; args=(1, u'pbkdf2_sha256$10000$DRfFnvmvOCxY$DRVJBUbUPYYP8k6JQiqkTk1UYwCNOWRhkd6tE9b7FlQ=', u'2014-04-15 19:35:41.909000', True, u'admin', u'', u'', u'admin@test.com', True, True, u'2014-04-15 19:19:49.027000', u'US/Eastern', False, True)
2014-06-26 19:21:20,038 [DEBUG] django.db.backends: (0.000) DELETE FROM "preferences_portaluser_user_permissions" WHERE "preferences_portaluser_user_permissions"."portaluser_id" = 1 ; args=(1,)
2014-06-26 19:21:20,040 [DEBUG] django.db.backends: (0.000) DELETE FROM "preferences_portaluser_groups" WHERE "preferences_portaluser_groups"."portaluser_id" = 1 ; args=(1,)
2014-06-26 19:21:20,040 [DEBUG] django.db.backends: (0.000) SELECT sql FROM sqlite_master WHERE tbl_name = preferences_portaluser AND type = table; args=[u'preferences_portaluser', 'table']
2014-06-26 19:21:20,041 [DEBUG] django.db.backends: (0.000) SELECT sql FROM sqlite_master WHERE tbl_name = preferences_portaluser AND type = table; args=[u'preferences_portaluser', 'table']
2014-06-26 19:21:20,045 [DEBUG] django.db.backends: (0.001) SELECT "preferences_systemsettings"."id", "preferences_systemsettings"."ignore_cache", "preferences_systemsettings"."developer", "preferences_systemsettings"."maps_version", "preferences_systemsettings"."maps_api_key" FROM "preferences_systemsettings"; args=()
2014-06-26 19:21:20,047 [DEBUG] django.db.backends: (0.000) SELECT (1) AS "a" FROM "preferences_systemsettings" WHERE "preferences_systemsettings"."id" = 1  LIMIT 1; args=(1,)
2014-06-26 19:21:20,047 [DEBUG] django.db.backends: (0.000) INSERT INTO "preferences_systemsettings" ("id", "ignore_cache", "developer", "maps_version", "maps_api_key") SELECT 1 AS "id", False AS "ignore_cache", False AS "developer", OPEN_STREET_MAPS AS "maps_version", None AS "maps_api_key"; args=(1, False, False, u'OPEN_STREET_MAPS', None)
2014-06-26 19:21:20,137 [DEBUG] django.db.backends: (0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
2014-06-26 19:21:20,139 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = permission  AND "django_content_type"."app_label" = auth ); args=('permission', u'auth')
2014-06-26 19:21:20,140 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = group  AND "django_content_type"."app_label" = auth ); args=('group', u'auth')
2014-06-26 19:21:20,141 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1, 2) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1, 2)
2014-06-26 19:21:20,142 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = auth  ORDER BY "django_content_type"."name" ASC; args=(u'auth',)
2014-06-26 19:21:20,143 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = contenttype  AND "django_content_type"."app_label" = contenttypes ); args=('contenttype', u'contenttypes')
2014-06-26 19:21:20,144 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (3) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(3,)
2014-06-26 19:21:20,145 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = contenttypes  ORDER BY "django_content_type"."name" ASC; args=(u'contenttypes',)
2014-06-26 19:21:20,146 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = session  AND "django_content_type"."app_label" = sessions ); args=('session', u'sessions')
2014-06-26 19:21:20,147 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(4,)
2014-06-26 19:21:20,148 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = sessions  ORDER BY "django_content_type"."name" ASC; args=(u'sessions',)
2014-06-26 19:21:20,152 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = bookmark  AND "django_content_type"."app_label" = menu ); args=('bookmark', u'menu')
2014-06-26 19:21:20,153 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,)
2014-06-26 19:21:20,154 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = menu  ORDER BY "django_content_type"."name" ASC; args=(u'menu',)
2014-06-26 19:21:20,155 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = dashboardpreferences  AND "django_content_type"."app_label" = dashboard ); args=('dashboardpreferences', u'dashboard')
2014-06-26 19:21:20,156 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,)
2014-06-26 19:21:20,157 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = dashboard  ORDER BY "django_content_type"."name" ASC; args=(u'dashboard',)
2014-06-26 19:21:20,158 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = logentry  AND "django_content_type"."app_label" = admin ); args=('logentry', u'admin')
2014-06-26 19:21:20,159 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,)
2014-06-26 19:21:20,159 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = admin  ORDER BY "django_content_type"."name" ASC; args=(u'admin',)
2014-06-26 19:21:20,162 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = tablefield  AND "django_content_type"."app_label" = datasource ); args=('tablefield', u'datasource')
2014-06-26 19:21:20,163 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = table  AND "django_content_type"."app_label" = datasource ); args=('table', u'datasource')
2014-06-26 19:21:20,164 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = column  AND "django_content_type"."app_label" = datasource ); args=('column', u'datasource')
2014-06-26 19:21:20,165 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = job  AND "django_content_type"."app_label" = datasource ); args=('job', u'datasource')
2014-06-26 19:21:20,166 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11)
2014-06-26 19:21:20,167 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = datasource  ORDER BY "django_content_type"."name" ASC; args=(u'datasource',)
2014-06-26 19:21:20,168 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = device  AND "django_content_type"."app_label" = devices ); args=('device', u'devices')
2014-06-26 19:21:20,169 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (13) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(13,)
2014-06-26 19:21:20,170 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = devices  ORDER BY "django_content_type"."name" ASC; args=(u'devices',)
2014-06-26 19:21:20,171 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = report  AND "django_content_type"."app_label" = report ); args=('report', u'report')
2014-06-26 19:21:20,172 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = section  AND "django_content_type"."app_label" = report ); args=('section', u'report')
2014-06-26 19:21:20,173 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = sectionfieldmode  AND "django_content_type"."app_label" = report ); args=('sectionfieldmode', u'report')
2014-06-26 19:21:20,174 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = widget  AND "django_content_type"."app_label" = report ); args=('widget', u'report')
2014-06-26 19:21:20,175 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = widgetjob  AND "django_content_type"."app_label" = report ); args=('widgetjob', u'report')
2014-06-26 19:21:20,176 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (16, 17, 18, 14, 15) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(16, 17, 18, 14, 15)
2014-06-26 19:21:20,177 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = report  ORDER BY "django_content_type"."name" ASC; args=(u'report',)
2014-06-26 19:21:20,178 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = location  AND "django_content_type"."app_label" = geolocation ); args=('location', u'geolocation')
2014-06-26 19:21:20,179 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = locationip  AND "django_content_type"."app_label" = geolocation ); args=('locationip', u'geolocation')
2014-06-26 19:21:20,180 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (19, 20) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(19, 20)
2014-06-26 19:21:20,181 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = geolocation  ORDER BY "django_content_type"."name" ASC; args=(u'geolocation',)
2014-06-26 19:21:20,182 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = portaluser  AND "django_content_type"."app_label" = preferences ); args=('portaluser', u'preferences')
2014-06-26 19:21:20,183 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."model" = systemsettings  AND "django_content_type"."app_label" = preferences ); args=('systemsettings', u'preferences')
2014-06-26 19:21:20,184 [DEBUG] django.db.backends: (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (21, 22) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(21, 22)
2014-06-26 19:21:20,185 [DEBUG] django.db.backends: (0.000) SELECT "django_content_type"."id", "django_content_type"."name", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = preferences  ORDER BY "django_content_type"."name" ASC; args=(u'preferences',)
2014-06-26 19:21:20,200 [DEBUG] django.db.backends: (0.001) SELECT "report_report"."id", "report_report"."title", "report_report"."position", "report_report"."enabled", "report_report"."slug", "report_report"."namespace", "report_report"."sourcefile", "report_report"."filepath", "report_report"."field_order", "report_report"."hidden_fields", "report_report"."hide_criteria", "report_report"."reload_minutes" FROM "report_report"; args=()
2014-06-26 19:21:20,204 [DEBUG] django.db.backends: (0.000) 
            SELECT name FROM sqlite_master
            WHERE type='table' AND NOT name='sqlite_sequence'
            ORDER BY name; args=()
2014-06-26 19:21:20,205 [DEBUG] django.db.backends: (0.000) SELECT "datasource_job"."id", "datasource_job"."created", "datasource_job"."touched", "datasource_job"."refcount", "datasource_job"."ischild", "datasource_job"."parent_id", "datasource_job"."table_id", "datasource_job"."criteria", "datasource_job"."actual_criteria", "datasource_job"."handle", "datasource_job"."status", "datasource_job"."message", "datasource_job"."progress", "datasource_job"."remaining" FROM "datasource_job"; args=()
2014-06-26 19:21:20,206 [DEBUG] django.db.backends: (0.000) SELECT "report_report"."id", "report_report"."title", "report_report"."position", "report_report"."enabled", "report_report"."slug", "report_report"."namespace", "report_report"."sourcefile", "report_report"."filepath", "report_report"."field_order", "report_report"."hidden_fields", "report_report"."hide_criteria", "report_report"."reload_minutes" FROM "report_report"; args=()
2014-06-26 19:21:20,206 [DEBUG] django.db.backends: (0.000) SELECT "report_section"."id", "report_section"."report_id", "report_section"."title", "report_section"."position" FROM "report_section"; args=()
2014-06-26 19:21:20,207 [DEBUG] django.db.backends: (0.000) DELETE FROM "report_sectionfieldmode"; args=()
2014-06-26 19:21:20,210 [DEBUG] django.db.backends: (0.000) SELECT "report_widget"."id", "report_widget"."section_id", "report_widget"."title", "report_widget"."row", "report_widget"."col", "report_widget"."width", "report_widget"."height", "report_widget"."rows", "report_widget"."options", "report_widget"."module", "report_widget"."uiwidget", "report_widget"."uioptions" FROM "report_widget"; args=()
2014-06-26 19:21:20,211 [DEBUG] django.db.backends: (0.000) SELECT "report_widgetjob"."id", "report_widgetjob"."widget_id", "report_widgetjob"."job_id" FROM "report_widgetjob"; args=()
2014-06-26 19:21:20,211 [DEBUG] django.db.backends: (0.000) SELECT "datasource_tablefield"."id", "datasource_tablefield"."keyword", "datasource_tablefield"."label", "datasource_tablefield"."help_text", "datasource_tablefield"."initial", "datasource_tablefield"."required", "datasource_tablefield"."hidden", "datasource_tablefield"."field_cls", "datasource_tablefield"."field_kwargs", "datasource_tablefield"."parent_keywords", "datasource_tablefield"."pre_process_func", "datasource_tablefield"."dynamic", "datasource_tablefield"."post_process_func", "datasource_tablefield"."post_process_template" FROM "datasource_tablefield"; args=()
2014-06-26 19:21:20,212 [DEBUG] django.db.backends: (0.000) SELECT "datasource_table"."id", "datasource_table"."name", "datasource_table"."module", "datasource_table"."queryclass", "datasource_table"."datasource", "datasource_table"."namespace", "datasource_table"."sourcefile", "datasource_table"."sortcols", "datasource_table"."sortdir", "datasource_table"."rows", "datasource_table"."filterexpr", "datasource_table"."resample", "datasource_table"."options", "datasource_table"."criteria", "datasource_table"."criteria_handle_func", "datasource_table"."cacheable" FROM "datasource_table"; args=()
2014-06-26 19:21:20,213 [DEBUG] django.db.backends: (0.000) SELECT "datasource_table"."id", "datasource_table"."name", "datasource_table"."module", "datasource_table"."queryclass", "datasource_table"."datasource", "datasource_table"."namespace", "datasource_table"."sourcefile", "datasource_table"."sortcols", "datasource_table"."sortdir", "datasource_table"."rows", "datasource_table"."filterexpr", "datasource_table"."resample", "datasource_table"."options", "datasource_table"."criteria", "datasource_table"."criteria_handle_func", "datasource_table"."cacheable" FROM "datasource_table"; args=()
2014-06-26 19:21:20,213 [DEBUG] django.db.backends: (0.000) DELETE FROM "datasource_column"; args=()
2014-06-26 19:21:20,217 [DEBUG] django.db.backends: (0.000) SELECT "datasource_job"."id", "datasource_job"."created", "datasource_job"."touched", "datasource_job"."refcount", "datasource_job"."ischild", "datasource_job"."parent_id", "datasource_job"."table_id", "datasource_job"."criteria", "datasource_job"."actual_criteria", "datasource_job"."handle", "datasource_job"."status", "datasource_job"."message", "datasource_job"."progress", "datasource_job"."remaining" FROM "datasource_job"; args=()
2014-06-26 19:21:20,220 [INFO] django.db.backends: *** rolling db log ***
