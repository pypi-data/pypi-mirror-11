Metadata-Version: 1.1
Name: django-choices-enum
Version: 0.2
Summary: make enum34 package play well with django choices
Home-page: http://github.com/tcwang817/django-choices-enum
Author: Tommy Wang
Author-email: twang@joinem.com
License: MIT
Download-URL: https://github.com/tcwang817/django-choices-enum/tarball/0.2
Description: django-choices-enum
        ===================
        
        django-choices-enum allows the usage of the 2.x backport of Python 3.4's enum
        package (enum34) as choices in Django models.
        
            from django.db import models
            from django_choices_enum import ChoicesEnum
        
            class Monster(models.Model):
                class Types(str, ChoicesEnum):
                    BEAST = ('beast', 'Beast')
                    UNDEAD = ('undead', 'Undead')
                    HUMAN = ('human', 'Human')
        
                name = models.CharField(max_length=40)
                type = models.CharField(max_length=40, choices=Types.choices())
        
        You may now write code like this:
        
            monsters = Monster.objects.filter(type=Monster.Types.BEAST)
            for m in monsters:
                assert m.type == Monster.Types.BEAST
        
            m = Monster(name='Vampire', type=Monster.Types.UNDEAD)
            m.save()
        
        Details
        =======
        
        Each enumeration is a class subclassed from the type of the field and the
        ChoicesEnum type:
        
            class MyIntEnumeration(int, ChoicesEnum):
                A = (1, 'Label A')
        
        Each constant is then assigned a tuple of (value, label) as expected by
        the Django choices parameter.  If the constant and label are the same,
        you may omit the tuple and simply set the constant equal to the value of
        the choice.
        
        Contributions
        =============
        
        I did not really write most of this code.  It was found and fixed from
        a Gist:
        
        https://gist.github.com/dstufft/5600529
        
Keywords: django choices enum
Platform: any
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Environment :: Web Environment
Classifier: Topic :: Internet
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 2.6
Classifier: Programming Language :: Python :: 2.7
Classifier: Framework :: Django
